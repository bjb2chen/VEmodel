import numpy as np
import itertools as it
import functools
import scipy
from scipy import sparse
# from .log_conf import log
import os

import types
log = types.SimpleNamespace()
log.debug = lambda x: None

S_dict = {}
D_dict = {}


def unique_permutations(iterable):
    """Return a sorted list of unique permutations of the items in `iterable`."""
    return sorted(list(set(it.permutations(iterable))))


def sparsity(tensor):
    """Return the percent of elements in `tensor` which are non-zero."""
    return np.count_nonzero(tensor) / tensor.size


def compress_w_tensor(w_tensor, nof_i_labels, nof_extra, debug=False):
    """Reshape and return the `w_tensor` (A, A, N, ..., N) to a (N^x, A^2) shaped matrix."""

    # we first need to reshape the W tensor to be a matrix of dimensions JxA
    A = w_tensor.shape[0] if nof_extra != 0 else 1
    N = w_tensor.shape[-1]

    if debug:
        with np.printoptions(linewidth=400, precision=2, suppress=True):
            log.debug(w_tensor)

    if nof_extra == 0:
        # there are no extra dimensions to move
        compressed_w_tensor = w_tensor
    elif nof_extra == 1:
        # we move the surface dimension (A, ) to the end
        compressed_w_tensor = np.moveaxis(w_tensor, (0, ), (-1))
    elif nof_extra == 2:
        # we move the surface dimensions (A, A) to the end
        compressed_w_tensor = np.moveaxis(w_tensor, (0, 1), (-2, -1))

    if debug:
        with np.printoptions(linewidth=400, precision=2, suppress=True):
            log.debug(compressed_w_tensor)
        log.debug(f"shifted surface dimensions: {compressed_w_tensor.shape}")

    """ we compress the mode and surface dimensions
    one of the following three options:
    - (N, ..., N) -> (N^x, 1)
    - (N, ..., N, A) -> (N^x, A)
    - (N, ..., N, A, A) -> (N^x, A^2)
    """
    if nof_extra == 0:
        compressed_w_tensor = compressed_w_tensor.reshape(N ** nof_i_labels, 1)
    elif nof_extra == 1:
        compressed_w_tensor = compressed_w_tensor.reshape(N ** nof_i_labels, A)
    elif nof_extra == 2:
        compressed_w_tensor = compressed_w_tensor.reshape(N ** nof_i_labels, A**2)

    if debug:
        log.debug(f"S_w_tensor: {w_tensor.shape}")
        log.debug(f"compressed_w_tensor: {compressed_w_tensor.shape}")

    return compressed_w_tensor


def expand_compressed_w_matrix(w_matrix, nof_extra, new_shape, debug=False):
    """Reshape and return the `w_matrix` (N^x, A^2) to a (A, A, N, ..., N) shaped tensor."""

    if debug:
        with np.printoptions(linewidth=400, precision=2, suppress=True):
            log.debug(w_matrix)

    """we move the compressed surface dimensions to the front
    one of the following three options:
    - (N^x, 1)   -> (1, N^x)
    - (N^x, A)   -> (A, N^x)
    - (N^x, A^2) -> (A^2, N^x)
    """
    w_tensor = np.moveaxis(w_matrix, 0, -1)

    if debug:
        with np.printoptions(linewidth=400, precision=2, suppress=True):
            log.debug(w_tensor)
        log.debug(f"shifted surface dimensions: {w_tensor.shape}")

    """we `uncompress` the surface and mode dimensions
    one of the following three options:
    - (1, N^x)   -> (N, ..., N)
    - (A, N^x)   -> (A, N, ..., N)
    - (A^2, N^x) -> (A, A, N, ..., N)
    """
    try:
        w_tensor = w_tensor.reshape(new_shape)
    except Exception as e:
        print(
            "Failed to reshape `w_tensor`.\n"
            f"Most likely culprit is that {new_shape = } is somehow incorrect?\n"
        )
        raise e

    if debug:
        log.debug(f"w_matrix: {w_matrix.shape}")
        log.debug(f"w_tensor: {w_tensor.shape}")

    return w_tensor


def labels_are_symmetrized(iterable, x_old=0):
    """Return True if each element in the iterable is >= the previous one; False otherwise.
    [1,2,3,4] would produce True, while [1,3,2,4] would produce False
    """
    for x in iterable:
        if x < x_old:
            return False
        x_old = x
    return True


def build_dense_projection_matrices(N, nof_i_labels):
    """ Calculate and return two dense projection matrices.
    The `IJ` and `JI` matrices map all label permutations to the ordered labels.
    For example: ijk, ikj, kij, kji, jki, jik all get mapped to ijk
    """

    nof_dimensions = 2 * nof_i_labels  # we're mapping from one set of i-labels to another set of i-labels
    shape = [N, ] * nof_dimensions  # each dimension iterates over N modes

    D_IJ, D_JI = np.zeros(shape, dtype=complex), np.zeros(shape, dtype=complex)

    symmetrized_label_list = list(filter(labels_are_symmetrized, it.product(range(N), repeat=nof_i_labels)))
    log.debug(f"Symmetrized list{list(symmetrized_label_list)}")

    for symmetrized_labels in symmetrized_label_list:
        log.debug(f"\n\nCurrent symmetrized label = {symmetrized_labels}")
        IJ_permutations = unique_permutations(symmetrized_labels)
        log.debug(f"{IJ_permutations=}")

        for perm in IJ_permutations:
            log.debug(f"IJ ({symmetrized_labels}, {perm})")
            index = (symmetrized_labels + perm)
            D_IJ[index] += 1

        JI_permutations = list(it.permutations(symmetrized_labels))
        log.debug(f"\n{JI_permutations=}")

        for perm in JI_permutations:
            log.debug(f"JI ({perm}, {symmetrized_labels})")
            index = (perm + symmetrized_labels)
            D_JI[index] += 1

    return D_IJ, D_JI


def convert_tensor_indices_to_list_index(N, nof_i_labels, indices):
    """Take the indices to an element in an MxM matrix and return a number representing
    the corresponding index if the matrix was flattened into an list.
    """
    return_index = 0
    for x, col_index in enumerate(indices):
        # the `row_multiplier` counts forward the appropriate # of `row` blocks in the list representation
        row_multiplier = N**(nof_i_labels-1-x)
        return_index += row_multiplier*col_index

    return return_index


def _build_s_ij(symmetrized_label_list, N, nof_i_labels):
    """Build the `S_IJ` or first sparse projection matrix.
    We create `row` and `col` vectors which index the matrix.
    Then we instantiate `S_IJ` as a coo matrix using `scipy.sparse.coo_matrix`.
    """
    row, col = [], []  # create empty lists

    for symmetrized_labels in symmetrized_label_list:
        permutations = unique_permutations(symmetrized_labels)
        for perm in permutations:
            row.append(convert_tensor_indices_to_list_index(N, nof_i_labels, symmetrized_labels))
            col.append(convert_tensor_indices_to_list_index(N, nof_i_labels, perm))

    row, col = np.array(row), np.array(col)
    data = np.full(shape=row.shape, fill_value=complex(1))

    M = N ** nof_i_labels
    S_IJ = scipy.sparse.coo_matrix((data, (row, col)), shape=(M, M), dtype=complex)
    return S_IJ


def _build_s_ji(symmetrized_label_list, N, nof_i_labels):
    """Build the `S_JI` or second sparse projection matrix.
    We create `row` and `col` vectors which index the matrix.
    Then we instantiate `S_JI` as a coo matrix using `scipy.sparse.coo_matrix`.
    """
    row, col = [], []  # create empty lists

    for symmetrized_labels in symmetrized_label_list:
        """
        the `permutations` object here is distinctly different from the one in `_build_s_ij` which is ON PURPOSE!!
        the S_JI project matrix needs to double count the diagonal terms
        we DON'T want to remove duplicate terms, therefore we DON'T want only the unique permutations
        """
        permutations = list(it.permutations(symmetrized_labels))
        for perm in permutations:
            row.append(convert_tensor_indices_to_list_index(N, nof_i_labels, perm))
            col.append(convert_tensor_indices_to_list_index(N, nof_i_labels, symmetrized_labels))

    row, col = np.array(row), np.array(col)
    data = np.full(shape=row.shape, fill_value=complex(1))

    M = N ** nof_i_labels
    S_JI = scipy.sparse.coo_matrix((data, (row, col)), shape=(M, M), dtype=complex)
    return S_JI


def build_sparse_projection_matrices(N, nof_i_labels):
    """ Calculate and return two sparse projection matrices.
    The `IJ` and `JI` matrices map all label permutations to the ordered labels.
    For example: ijk,ikj,kij,kji,jki,jik all get mapped to ijk
    Each sparse matrix is MxM where M=N^(`nof_i_label`) or equivalently M=N^(order of the tensor being project)
    """
    M = N ** nof_i_labels
    sparse_matrix_shape = (M, M)
    log.debug(f"{M = }\n{sparse_matrix_shape = }\n")

    """ list of permutations of symmetrized labels
    such as (0,0,0), (0,0,1), .... where `nof_i_labels=3`
    for example: 123, 132, 213, 231, 312, 321 -> only 123 is symmetric
    """
    symmetrized_label_list = list(filter(labels_are_symmetrized, it.product(range(N), repeat=nof_i_labels)))

    S_IJ = _build_s_ij(symmetrized_label_list, N, nof_i_labels)  # build S_IJ projection matrix
    S_JI = _build_s_ji(symmetrized_label_list, N, nof_i_labels)  # build S_JI projection matrix

    # convert to csr matrices
    S_IJ = S_IJ.tocsr()
    S_JI = S_JI.tocsr()

    return S_IJ, S_JI


def get_sparse_projection_matrices(N, nof_i_labels):
    """Attempt to retrieve sparse projection matrices from cache, disk, or generate it (in that order)."""

    fname1 = f"./sparse_W^{nof_i_labels}_N{N}_Sp{1}.npz"
    fname2 = f"./sparse_W^{nof_i_labels}_N{N}_Sp{2}.npz"

    # load the sparse projection matrices from memory
    if fname1 in S_dict:
        log.debug('Retrieving sparse projection matrices from dictionary in memory')
        return S_dict[fname1], S_dict[fname2]

    # load the sparse projection matrices from file/disk
    elif os.path.isfile(fname1) and os.path.isfile(fname2):

        log.debug('Retrieving sparse projection matrices from disk (loading from files)')
        S_IJ = scipy.sparse.load_npz(fname1)
        S_JI = scipy.sparse.load_npz(fname2)

        log.debug(f"Sparse projection matrix is {type(S_JI) = }")

        log.debug('Storing sparse projection matrices in memory')
        S_dict[fname1] = S_IJ
        S_dict[fname2] = S_JI
        log.debug('Done')

        return S_IJ, S_JI

    # generate the sparse projection matrices
    else:
        log.debug('Building sparse projection matrices')
        S_IJ, S_JI = build_sparse_projection_matrices(N, nof_i_labels)

        log.debug('Saving sparse projection matrices to disk')
        if not os.path.isfile(fname1):
            scipy.sparse.save_npz(fname1, S_IJ)
        if not os.path.isfile(fname2):
            scipy.sparse.save_npz(fname2, S_JI)

        log.debug('Storing sparse projection matrices in memory')
        S_dict[fname1] = S_IJ
        S_dict[fname2] = S_JI
        log.debug('Done')

        return S_IJ, S_JI


def get_dense_projection_matrices(N, nof_i_labels):
    """Attempt to retrieve dense projection matrices from memory, disk, or generate it (in that order)."""

    fname1 = f"./dense_W^{nof_i_labels}_N{N}_Dp{1}.npz"
    fname2 = f"./dense_W^{nof_i_labels}_N{N}_Dp{2}.npz"

    # load the dense projection matrices from memory
    if fname1 in D_dict:
        log.debug('Retrieving dense projection matrices from dictionary in memory')
        return D_dict[fname1], D_dict[fname2]

    # load the dense projection matrices from file/disk
    elif os.path.isfile(fname1) and os.path.isfile(fname2):

        log.debug('Retrieving dense projection matrices from disk (loading from files)')
        D_IJ = np.load(fname1)
        D_JI = np.load(fname2)

        log.debug('Storing dense projection matrices in memory')
        D_dict[fname1] = D_IJ
        D_dict[fname2] = D_JI
        log.debug('Done')

        return D_IJ, D_JI

    # generate the dense projection matrices
    else:
        log.debug('Building dense matrices')
        D_IJ, D_JI = build_dense_projection_matrices(N, nof_i_labels)

        log.debug('Saving dense projection matrices to disk')
        if not os.path.isfile(fname1):
            np.savez(fname1, D_IJ)
        if not os.path.isfile(fname2):
            np.savez(fname2, D_JI)

        log.debug('Storing dense projection matrices in memory')
        D_dict[fname1] = D_IJ
        D_dict[fname2] = D_JI
        log.debug('Done')

        return D_IJ, D_JI


def sparse_symmetrize(N, tensor, order, nof_extra, debug_sparse=False):
    """Symmetrize the tensor by double projecting it with sparse matrices S_IJ, S_JI."""

    if not debug_sparse:
        D_JA = None

    # matrix/tensor approach
    nof_i_labels = order
    n_dims = 2 * nof_i_labels

    # the number of extra dimensions that are NOT symmetrized over
    nA = nof_extra
    nA_list = list(range(nA))

    if debug_sparse:
        s_op_list = [nA+x for x in range(n_dims)]
        w_op_list = nA_list + [nA+x for x in range(nof_i_labels, n_dims)]
        output_op_list = nA_list + [nA+x for x in range(nof_i_labels)]
        D_IJ, D_JI = get_dense_projection_matrices(N, nof_i_labels)
        D_IA = np.einsum(D_IJ, s_op_list, tensor, w_op_list, output_op_list)
        D_JA = np.einsum(D_JI, s_op_list, D_IA, w_op_list, output_op_list)

    # sparse approach
    S_IJ, S_JI = get_sparse_projection_matrices(N, nof_i_labels)

    # we have to reshape the tensor into a matrix (even if there are no extra dims)
    tensor_as_matrix = compress_w_tensor(tensor, nof_i_labels, nof_extra)

    # we preform the first projection by multiplying by the sparse projection matrix `S_IJ`
    W_IA = S_IJ * tensor_as_matrix

    if debug_sparse:  # debug check
        check = np.moveaxis(W_IA, 0, -1)
        check = check.reshape(D_JA.shape)

        with np.printoptions(linewidth=400, precision=2, suppress=True):
            log.debug('\nW_IA\n')
            log.debug(check)
            log.debug('\nD_IA\n')
            log.debug(D_IA)

        assert np.allclose(D_IA, check), "not the same D_IA W_IA!!"

    # we preform the second projection by multiplying by the sparse projection matrix `S_JI`
    W_JA = S_JI * W_IA

    if debug_sparse:  # debug check
        check = np.moveaxis(W_JA, 0, -1)
        check = check.reshape(D_IA.shape)

        with np.printoptions(linewidth=400, precision=2, suppress=True):
            log.debug('\nW_JA\n')
            log.debug(check)
            log.debug('\nD_JA\n')
            log.debug(D_JA)

        assert np.allclose(D_JA, check), "not the same D_JA W_JA!!"
        return check, D_JA

    # uncompress
    return_tensor = expand_compressed_w_matrix(W_JA, nof_extra, new_shape=tensor.shape)

    return return_tensor


def symmetrize_tensor(N, tensor, order, tensor_approach=False, debug_sparse=False):
    """Symmetrize a tensor (originally was the W operator or the residual).
    Can operator on any tensor of the shape (X, ..., X, N, ..., N)
        with some 0 or more leading dimensions that are NOT symmetrized and
        at least 1 trailing dimension that WILL be symmetrized.

    For example it can symmetrize on the `N` dimension on each of the following:
        (A, A, N, ..., N)
        (A, N, ..., N)
        (N, ..., N)

    But tensors of this shape will not work properly:
        (N, N, A)
        (N, A, N)
        (A, )

    Three methods are available:
        - the fast and efficient sparse matrix projection
        - the fast and very large dense matrix projection
        - the slow manual sum over tranposes of the tensor

    The sparse projection can only work if the `tensor_approach` is possible.
    To confirm that the symmetrization is possible you should set `tensor_approach` to `True`.
    """

    # assess shape
    dims = tensor.shape
    nof_dims = len(dims)
    log.debug(f"\nInput: ({N = }), ({order = }), ({dims = })")
    assert nof_dims >= order, (
        f"The provided tensor has less dimensions {nof_dims = } than {order = }? Bad input arguments!"
    )

    # the number of leading dimensions that will not be symmetrized
    nof_extra = nof_dims - order

    if debug_sparse:
        log.debug(
            f"Preparing to symmetrize a tensor with shape {dims}\n"
            f"Where the first ({nof_extra}) dimensions are NOT symmetrized over\n"
            f"So we will symmetrize the remaining ({dims[nof_extra:]}) dimensions"
        )

    # first check that we have between zero and 2 extra dims
    assert 0 <= nof_extra, (
        f"Tensor has 3 or more dimensions ({nof_extra})"
        "not being symmetrized over."
        "Currently only 0, 1, or 2 are implemented in the code."
    )

    # first check that the symmetrization dimensions have the correct size
    idxs = list(range(nof_dims))  # indexes of all dimensions
    mode_idxs = idxs[nof_extra:]  # indexes of only the mode dimensions
    for i in mode_idxs:
        assert dims[i] == N, f'Dimension {i} has incorrect length {dims[i]} instead of {N = }'

    # no symmetrizing needed
    if order == 0 or order == 1:
        log.debug(f"No symmetrization needed for {order = }")
        return tensor

    # generate the answer from the tensors
    if tensor_approach or debug_sparse:
        if nof_extra == 0:
            X = _transpose_symmetrize_1(N, tensor, order)
        elif nof_extra == 1:
            X = _transpose_symmetrize_A(N, tensor, order)
        elif nof_extra == 2:
            X = _transpose_symmetrize_AA(N, tensor, order)

        # if we are specifically timing the tensor approach then return the symmetrized tensor
        if tensor_approach:
            return X

    # generate the answer from the sparse and/or dense projection approaches
    if not tensor_approach:

        if not debug_sparse:
            W_JA = sparse_symmetrize(N, tensor, order, nof_extra)
            return W_JA

        if debug_sparse:

            print(
                "WARNING\n"
                "Debugging with the dense matrices can take a VERY large amount of memory.\n"
                "You must manually remove the 'False' from line 442 to test with dense matrices.\n"
                "Defaulting to comparing sparse matrices to tensor symmetrization.\n"
            )
            # for systems with more than 9 modes the dense matrices require too much memory to store
            if N <= 9 and False:

                import pdb; pdb.set_trace()
                W_JA, D_JA = sparse_symmetrize(N, tensor, order, nof_extra, debug_sparse)
                assert np.allclose(X, D_JA), "Dense matrix doesn't match transpose!!"
            else:
                W_JA = sparse_symmetrize(N, tensor, order, nof_extra)

            assert np.allclose(X, W_JA), "Sparse matrix doesn't match transpose!!"
            log.debug(f"The matrices matched for {order = }")
            return W_JA


def _transpose_symmetrize_1(N, tensor, order):
    """Symmetrizing a tensor (the W operator or the residual) by tracing over all permutations.

    This assumes that the tensor has shape:
        (N, ..., N)
    meaning that all dimensions need to be symmetrized.
    """
    X = np.zeros_like(tensor, dtype=complex)

    if order == 0 or order == 1:
        return tensor
    if order == 2:
        X += np.transpose(tensor, (0, 1))
        X += np.transpose(tensor, (1, 0))
    if order == 3:
        X += np.transpose(tensor, (0, 1, 2))
        X += np.transpose(tensor, (0, 2, 1))
        X += np.transpose(tensor, (1, 0, 2))
        X += np.transpose(tensor, (1, 2, 0))
        X += np.transpose(tensor, (2, 0, 1))
        X += np.transpose(tensor, (2, 1, 0))
    if order == 4:
        X += np.transpose(tensor, (0, 1, 2, 3))
        X += np.transpose(tensor, (0, 1, 3, 2))
        X += np.transpose(tensor, (0, 2, 1, 3))
        X += np.transpose(tensor, (0, 2, 3, 1))
        X += np.transpose(tensor, (0, 3, 1, 2))
        X += np.transpose(tensor, (0, 3, 2, 1))
        X += np.transpose(tensor, (1, 0, 2, 3))
        X += np.transpose(tensor, (1, 0, 3, 2))
        X += np.transpose(tensor, (1, 2, 0, 3))
        X += np.transpose(tensor, (1, 2, 3, 0))
        X += np.transpose(tensor, (1, 3, 0, 2))
        X += np.transpose(tensor, (1, 3, 2, 0))
        X += np.transpose(tensor, (2, 0, 1, 3))
        X += np.transpose(tensor, (2, 0, 3, 1))
        X += np.transpose(tensor, (2, 1, 0, 3))
        X += np.transpose(tensor, (2, 1, 3, 0))
        X += np.transpose(tensor, (2, 3, 0, 1))
        X += np.transpose(tensor, (2, 3, 1, 0))
        X += np.transpose(tensor, (3, 0, 1, 2))
        X += np.transpose(tensor, (3, 0, 2, 1))
        X += np.transpose(tensor, (3, 1, 0, 2))
        X += np.transpose(tensor, (3, 1, 2, 0))
        X += np.transpose(tensor, (3, 2, 0, 1))
        X += np.transpose(tensor, (3, 2, 1, 0))
    if order == 5:
        X += np.transpose(tensor, (0, 1, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 3, 2))
        X += np.transpose(tensor, (0, 2, 1, 3, 4))
        X += np.transpose(tensor, (0, 2, 1, 4, 3))
        X += np.transpose(tensor, (0, 2, 3, 1, 4))
        X += np.transpose(tensor, (0, 2, 3, 4, 1))
        X += np.transpose(tensor, (0, 2, 4, 1, 3))
        X += np.transpose(tensor, (0, 2, 4, 3, 1))
        X += np.transpose(tensor, (0, 3, 1, 2, 4))
        X += np.transpose(tensor, (0, 3, 1, 4, 2))
        X += np.transpose(tensor, (0, 3, 2, 1, 4))
        X += np.transpose(tensor, (0, 3, 2, 4, 1))
        X += np.transpose(tensor, (0, 3, 4, 1, 2))
        X += np.transpose(tensor, (0, 3, 4, 2, 1))
        X += np.transpose(tensor, (0, 4, 1, 2, 3))
        X += np.transpose(tensor, (0, 4, 1, 3, 2))
        X += np.transpose(tensor, (0, 4, 2, 1, 3))
        X += np.transpose(tensor, (0, 4, 2, 3, 1))
        X += np.transpose(tensor, (0, 4, 3, 1, 2))
        X += np.transpose(tensor, (0, 4, 3, 2, 1))
        X += np.transpose(tensor, (1, 0, 2, 3, 4))
        X += np.transpose(tensor, (1, 0, 2, 4, 3))
        X += np.transpose(tensor, (1, 0, 3, 2, 4))
        X += np.transpose(tensor, (1, 0, 3, 4, 2))
        X += np.transpose(tensor, (1, 0, 4, 2, 3))
        X += np.transpose(tensor, (1, 0, 4, 3, 2))
        X += np.transpose(tensor, (1, 2, 0, 3, 4))
        X += np.transpose(tensor, (1, 2, 0, 4, 3))
        X += np.transpose(tensor, (1, 2, 3, 0, 4))
        X += np.transpose(tensor, (1, 2, 3, 4, 0))
        X += np.transpose(tensor, (1, 2, 4, 0, 3))
        X += np.transpose(tensor, (1, 2, 4, 3, 0))
        X += np.transpose(tensor, (1, 3, 0, 2, 4))
        X += np.transpose(tensor, (1, 3, 0, 4, 2))
        X += np.transpose(tensor, (1, 3, 2, 0, 4))
        X += np.transpose(tensor, (1, 3, 2, 4, 0))
        X += np.transpose(tensor, (1, 3, 4, 0, 2))
        X += np.transpose(tensor, (1, 3, 4, 2, 0))
        X += np.transpose(tensor, (1, 4, 0, 2, 3))
        X += np.transpose(tensor, (1, 4, 0, 3, 2))
        X += np.transpose(tensor, (1, 4, 2, 0, 3))
        X += np.transpose(tensor, (1, 4, 2, 3, 0))
        X += np.transpose(tensor, (1, 4, 3, 0, 2))
        X += np.transpose(tensor, (1, 4, 3, 2, 0))
        X += np.transpose(tensor, (2, 0, 1, 3, 4))
        X += np.transpose(tensor, (2, 0, 1, 4, 3))
        X += np.transpose(tensor, (2, 0, 3, 1, 4))
        X += np.transpose(tensor, (2, 0, 3, 4, 1))
        X += np.transpose(tensor, (2, 0, 4, 1, 3))
        X += np.transpose(tensor, (2, 0, 4, 3, 1))
        X += np.transpose(tensor, (2, 1, 0, 3, 4))
        X += np.transpose(tensor, (2, 1, 0, 4, 3))
        X += np.transpose(tensor, (2, 1, 3, 0, 4))
        X += np.transpose(tensor, (2, 1, 3, 4, 0))
        X += np.transpose(tensor, (2, 1, 4, 0, 3))
        X += np.transpose(tensor, (2, 1, 4, 3, 0))
        X += np.transpose(tensor, (2, 3, 0, 1, 4))
        X += np.transpose(tensor, (2, 3, 0, 4, 1))
        X += np.transpose(tensor, (2, 3, 1, 0, 4))
        X += np.transpose(tensor, (2, 3, 1, 4, 0))
        X += np.transpose(tensor, (2, 3, 4, 0, 1))
        X += np.transpose(tensor, (2, 3, 4, 1, 0))
        X += np.transpose(tensor, (2, 4, 0, 1, 3))
        X += np.transpose(tensor, (2, 4, 0, 3, 1))
        X += np.transpose(tensor, (2, 4, 1, 0, 3))
        X += np.transpose(tensor, (2, 4, 1, 3, 0))
        X += np.transpose(tensor, (2, 4, 3, 0, 1))
        X += np.transpose(tensor, (2, 4, 3, 1, 0))
        X += np.transpose(tensor, (3, 0, 1, 2, 4))
        X += np.transpose(tensor, (3, 0, 1, 4, 2))
        X += np.transpose(tensor, (3, 0, 2, 1, 4))
        X += np.transpose(tensor, (3, 0, 2, 4, 1))
        X += np.transpose(tensor, (3, 0, 4, 1, 2))
        X += np.transpose(tensor, (3, 0, 4, 2, 1))
        X += np.transpose(tensor, (3, 1, 0, 2, 4))
        X += np.transpose(tensor, (3, 1, 0, 4, 2))
        X += np.transpose(tensor, (3, 1, 2, 0, 4))
        X += np.transpose(tensor, (3, 1, 2, 4, 0))
        X += np.transpose(tensor, (3, 1, 4, 0, 2))
        X += np.transpose(tensor, (3, 1, 4, 2, 0))
        X += np.transpose(tensor, (3, 2, 0, 1, 4))
        X += np.transpose(tensor, (3, 2, 0, 4, 1))
        X += np.transpose(tensor, (3, 2, 1, 0, 4))
        X += np.transpose(tensor, (3, 2, 1, 4, 0))
        X += np.transpose(tensor, (3, 2, 4, 0, 1))
        X += np.transpose(tensor, (3, 2, 4, 1, 0))
        X += np.transpose(tensor, (3, 4, 0, 1, 2))
        X += np.transpose(tensor, (3, 4, 0, 2, 1))
        X += np.transpose(tensor, (3, 4, 1, 0, 2))
        X += np.transpose(tensor, (3, 4, 1, 2, 0))
        X += np.transpose(tensor, (3, 4, 2, 0, 1))
        X += np.transpose(tensor, (3, 4, 2, 1, 0))
        X += np.transpose(tensor, (4, 0, 1, 2, 3))
        X += np.transpose(tensor, (4, 0, 1, 3, 2))
        X += np.transpose(tensor, (4, 0, 2, 1, 3))
        X += np.transpose(tensor, (4, 0, 2, 3, 1))
        X += np.transpose(tensor, (4, 0, 3, 1, 2))
        X += np.transpose(tensor, (4, 0, 3, 2, 1))
        X += np.transpose(tensor, (4, 1, 0, 2, 3))
        X += np.transpose(tensor, (4, 1, 0, 3, 2))
        X += np.transpose(tensor, (4, 1, 2, 0, 3))
        X += np.transpose(tensor, (4, 1, 2, 3, 0))
        X += np.transpose(tensor, (4, 1, 3, 0, 2))
        X += np.transpose(tensor, (4, 1, 3, 2, 0))
        X += np.transpose(tensor, (4, 2, 0, 1, 3))
        X += np.transpose(tensor, (4, 2, 0, 3, 1))
        X += np.transpose(tensor, (4, 2, 1, 0, 3))
        X += np.transpose(tensor, (4, 2, 1, 3, 0))
        X += np.transpose(tensor, (4, 2, 3, 0, 1))
        X += np.transpose(tensor, (4, 2, 3, 1, 0))
        X += np.transpose(tensor, (4, 3, 0, 1, 2))
        X += np.transpose(tensor, (4, 3, 0, 2, 1))
        X += np.transpose(tensor, (4, 3, 1, 0, 2))
        X += np.transpose(tensor, (4, 3, 1, 2, 0))
        X += np.transpose(tensor, (4, 3, 2, 0, 1))
        X += np.transpose(tensor, (4, 3, 2, 1, 0))
    if order == 6:
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 2))
        X += np.transpose(tensor, (0, 2, 1, 3, 4, 5))
        X += np.transpose(tensor, (0, 2, 1, 3, 5, 4))
        X += np.transpose(tensor, (0, 2, 1, 4, 3, 5))
        X += np.transpose(tensor, (0, 2, 1, 4, 5, 3))
        X += np.transpose(tensor, (0, 2, 1, 5, 3, 4))
        X += np.transpose(tensor, (0, 2, 1, 5, 4, 3))
        X += np.transpose(tensor, (0, 2, 3, 1, 4, 5))
        X += np.transpose(tensor, (0, 2, 3, 1, 5, 4))
        X += np.transpose(tensor, (0, 2, 3, 4, 1, 5))
        X += np.transpose(tensor, (0, 2, 3, 4, 5, 1))
        X += np.transpose(tensor, (0, 2, 3, 5, 1, 4))
        X += np.transpose(tensor, (0, 2, 3, 5, 4, 1))
        X += np.transpose(tensor, (0, 2, 4, 1, 3, 5))
        X += np.transpose(tensor, (0, 2, 4, 1, 5, 3))
        X += np.transpose(tensor, (0, 2, 4, 3, 1, 5))
        X += np.transpose(tensor, (0, 2, 4, 3, 5, 1))
        X += np.transpose(tensor, (0, 2, 4, 5, 1, 3))
        X += np.transpose(tensor, (0, 2, 4, 5, 3, 1))
        X += np.transpose(tensor, (0, 2, 5, 1, 3, 4))
        X += np.transpose(tensor, (0, 2, 5, 1, 4, 3))
        X += np.transpose(tensor, (0, 2, 5, 3, 1, 4))
        X += np.transpose(tensor, (0, 2, 5, 3, 4, 1))
        X += np.transpose(tensor, (0, 2, 5, 4, 1, 3))
        X += np.transpose(tensor, (0, 2, 5, 4, 3, 1))
        X += np.transpose(tensor, (0, 3, 1, 2, 4, 5))
        X += np.transpose(tensor, (0, 3, 1, 2, 5, 4))
        X += np.transpose(tensor, (0, 3, 1, 4, 2, 5))
        X += np.transpose(tensor, (0, 3, 1, 4, 5, 2))
        X += np.transpose(tensor, (0, 3, 1, 5, 2, 4))
        X += np.transpose(tensor, (0, 3, 1, 5, 4, 2))
        X += np.transpose(tensor, (0, 3, 2, 1, 4, 5))
        X += np.transpose(tensor, (0, 3, 2, 1, 5, 4))
        X += np.transpose(tensor, (0, 3, 2, 4, 1, 5))
        X += np.transpose(tensor, (0, 3, 2, 4, 5, 1))
        X += np.transpose(tensor, (0, 3, 2, 5, 1, 4))
        X += np.transpose(tensor, (0, 3, 2, 5, 4, 1))
        X += np.transpose(tensor, (0, 3, 4, 1, 2, 5))
        X += np.transpose(tensor, (0, 3, 4, 1, 5, 2))
        X += np.transpose(tensor, (0, 3, 4, 2, 1, 5))
        X += np.transpose(tensor, (0, 3, 4, 2, 5, 1))
        X += np.transpose(tensor, (0, 3, 4, 5, 1, 2))
        X += np.transpose(tensor, (0, 3, 4, 5, 2, 1))
        X += np.transpose(tensor, (0, 3, 5, 1, 2, 4))
        X += np.transpose(tensor, (0, 3, 5, 1, 4, 2))
        X += np.transpose(tensor, (0, 3, 5, 2, 1, 4))
        X += np.transpose(tensor, (0, 3, 5, 2, 4, 1))
        X += np.transpose(tensor, (0, 3, 5, 4, 1, 2))
        X += np.transpose(tensor, (0, 3, 5, 4, 2, 1))
        X += np.transpose(tensor, (0, 4, 1, 2, 3, 5))
        X += np.transpose(tensor, (0, 4, 1, 2, 5, 3))
        X += np.transpose(tensor, (0, 4, 1, 3, 2, 5))
        X += np.transpose(tensor, (0, 4, 1, 3, 5, 2))
        X += np.transpose(tensor, (0, 4, 1, 5, 2, 3))
        X += np.transpose(tensor, (0, 4, 1, 5, 3, 2))
        X += np.transpose(tensor, (0, 4, 2, 1, 3, 5))
        X += np.transpose(tensor, (0, 4, 2, 1, 5, 3))
        X += np.transpose(tensor, (0, 4, 2, 3, 1, 5))
        X += np.transpose(tensor, (0, 4, 2, 3, 5, 1))
        X += np.transpose(tensor, (0, 4, 2, 5, 1, 3))
        X += np.transpose(tensor, (0, 4, 2, 5, 3, 1))
        X += np.transpose(tensor, (0, 4, 3, 1, 2, 5))
        X += np.transpose(tensor, (0, 4, 3, 1, 5, 2))
        X += np.transpose(tensor, (0, 4, 3, 2, 1, 5))
        X += np.transpose(tensor, (0, 4, 3, 2, 5, 1))
        X += np.transpose(tensor, (0, 4, 3, 5, 1, 2))
        X += np.transpose(tensor, (0, 4, 3, 5, 2, 1))
        X += np.transpose(tensor, (0, 4, 5, 1, 2, 3))
        X += np.transpose(tensor, (0, 4, 5, 1, 3, 2))
        X += np.transpose(tensor, (0, 4, 5, 2, 1, 3))
        X += np.transpose(tensor, (0, 4, 5, 2, 3, 1))
        X += np.transpose(tensor, (0, 4, 5, 3, 1, 2))
        X += np.transpose(tensor, (0, 4, 5, 3, 2, 1))
        X += np.transpose(tensor, (0, 5, 1, 2, 3, 4))
        X += np.transpose(tensor, (0, 5, 1, 2, 4, 3))
        X += np.transpose(tensor, (0, 5, 1, 3, 2, 4))
        X += np.transpose(tensor, (0, 5, 1, 3, 4, 2))
        X += np.transpose(tensor, (0, 5, 1, 4, 2, 3))
        X += np.transpose(tensor, (0, 5, 1, 4, 3, 2))
        X += np.transpose(tensor, (0, 5, 2, 1, 3, 4))
        X += np.transpose(tensor, (0, 5, 2, 1, 4, 3))
        X += np.transpose(tensor, (0, 5, 2, 3, 1, 4))
        X += np.transpose(tensor, (0, 5, 2, 3, 4, 1))
        X += np.transpose(tensor, (0, 5, 2, 4, 1, 3))
        X += np.transpose(tensor, (0, 5, 2, 4, 3, 1))
        X += np.transpose(tensor, (0, 5, 3, 1, 2, 4))
        X += np.transpose(tensor, (0, 5, 3, 1, 4, 2))
        X += np.transpose(tensor, (0, 5, 3, 2, 1, 4))
        X += np.transpose(tensor, (0, 5, 3, 2, 4, 1))
        X += np.transpose(tensor, (0, 5, 3, 4, 1, 2))
        X += np.transpose(tensor, (0, 5, 3, 4, 2, 1))
        X += np.transpose(tensor, (0, 5, 4, 1, 2, 3))
        X += np.transpose(tensor, (0, 5, 4, 1, 3, 2))
        X += np.transpose(tensor, (0, 5, 4, 2, 1, 3))
        X += np.transpose(tensor, (0, 5, 4, 2, 3, 1))
        X += np.transpose(tensor, (0, 5, 4, 3, 1, 2))
        X += np.transpose(tensor, (0, 5, 4, 3, 2, 1))
        X += np.transpose(tensor, (1, 0, 2, 3, 4, 5))
        X += np.transpose(tensor, (1, 0, 2, 3, 5, 4))
        X += np.transpose(tensor, (1, 0, 2, 4, 3, 5))
        X += np.transpose(tensor, (1, 0, 2, 4, 5, 3))
        X += np.transpose(tensor, (1, 0, 2, 5, 3, 4))
        X += np.transpose(tensor, (1, 0, 2, 5, 4, 3))
        X += np.transpose(tensor, (1, 0, 3, 2, 4, 5))
        X += np.transpose(tensor, (1, 0, 3, 2, 5, 4))
        X += np.transpose(tensor, (1, 0, 3, 4, 2, 5))
        X += np.transpose(tensor, (1, 0, 3, 4, 5, 2))
        X += np.transpose(tensor, (1, 0, 3, 5, 2, 4))
        X += np.transpose(tensor, (1, 0, 3, 5, 4, 2))
        X += np.transpose(tensor, (1, 0, 4, 2, 3, 5))
        X += np.transpose(tensor, (1, 0, 4, 2, 5, 3))
        X += np.transpose(tensor, (1, 0, 4, 3, 2, 5))
        X += np.transpose(tensor, (1, 0, 4, 3, 5, 2))
        X += np.transpose(tensor, (1, 0, 4, 5, 2, 3))
        X += np.transpose(tensor, (1, 0, 4, 5, 3, 2))
        X += np.transpose(tensor, (1, 0, 5, 2, 3, 4))
        X += np.transpose(tensor, (1, 0, 5, 2, 4, 3))
        X += np.transpose(tensor, (1, 0, 5, 3, 2, 4))
        X += np.transpose(tensor, (1, 0, 5, 3, 4, 2))
        X += np.transpose(tensor, (1, 0, 5, 4, 2, 3))
        X += np.transpose(tensor, (1, 0, 5, 4, 3, 2))
        X += np.transpose(tensor, (1, 2, 0, 3, 4, 5))
        X += np.transpose(tensor, (1, 2, 0, 3, 5, 4))
        X += np.transpose(tensor, (1, 2, 0, 4, 3, 5))
        X += np.transpose(tensor, (1, 2, 0, 4, 5, 3))
        X += np.transpose(tensor, (1, 2, 0, 5, 3, 4))
        X += np.transpose(tensor, (1, 2, 0, 5, 4, 3))
        X += np.transpose(tensor, (1, 2, 3, 0, 4, 5))
        X += np.transpose(tensor, (1, 2, 3, 0, 5, 4))
        X += np.transpose(tensor, (1, 2, 3, 4, 0, 5))
        X += np.transpose(tensor, (1, 2, 3, 4, 5, 0))
        X += np.transpose(tensor, (1, 2, 3, 5, 0, 4))
        X += np.transpose(tensor, (1, 2, 3, 5, 4, 0))
        X += np.transpose(tensor, (1, 2, 4, 0, 3, 5))
        X += np.transpose(tensor, (1, 2, 4, 0, 5, 3))
        X += np.transpose(tensor, (1, 2, 4, 3, 0, 5))
        X += np.transpose(tensor, (1, 2, 4, 3, 5, 0))
        X += np.transpose(tensor, (1, 2, 4, 5, 0, 3))
        X += np.transpose(tensor, (1, 2, 4, 5, 3, 0))
        X += np.transpose(tensor, (1, 2, 5, 0, 3, 4))
        X += np.transpose(tensor, (1, 2, 5, 0, 4, 3))
        X += np.transpose(tensor, (1, 2, 5, 3, 0, 4))
        X += np.transpose(tensor, (1, 2, 5, 3, 4, 0))
        X += np.transpose(tensor, (1, 2, 5, 4, 0, 3))
        X += np.transpose(tensor, (1, 2, 5, 4, 3, 0))
        X += np.transpose(tensor, (1, 3, 0, 2, 4, 5))
        X += np.transpose(tensor, (1, 3, 0, 2, 5, 4))
        X += np.transpose(tensor, (1, 3, 0, 4, 2, 5))
        X += np.transpose(tensor, (1, 3, 0, 4, 5, 2))
        X += np.transpose(tensor, (1, 3, 0, 5, 2, 4))
        X += np.transpose(tensor, (1, 3, 0, 5, 4, 2))
        X += np.transpose(tensor, (1, 3, 2, 0, 4, 5))
        X += np.transpose(tensor, (1, 3, 2, 0, 5, 4))
        X += np.transpose(tensor, (1, 3, 2, 4, 0, 5))
        X += np.transpose(tensor, (1, 3, 2, 4, 5, 0))
        X += np.transpose(tensor, (1, 3, 2, 5, 0, 4))
        X += np.transpose(tensor, (1, 3, 2, 5, 4, 0))
        X += np.transpose(tensor, (1, 3, 4, 0, 2, 5))
        X += np.transpose(tensor, (1, 3, 4, 0, 5, 2))
        X += np.transpose(tensor, (1, 3, 4, 2, 0, 5))
        X += np.transpose(tensor, (1, 3, 4, 2, 5, 0))
        X += np.transpose(tensor, (1, 3, 4, 5, 0, 2))
        X += np.transpose(tensor, (1, 3, 4, 5, 2, 0))
        X += np.transpose(tensor, (1, 3, 5, 0, 2, 4))
        X += np.transpose(tensor, (1, 3, 5, 0, 4, 2))
        X += np.transpose(tensor, (1, 3, 5, 2, 0, 4))
        X += np.transpose(tensor, (1, 3, 5, 2, 4, 0))
        X += np.transpose(tensor, (1, 3, 5, 4, 0, 2))
        X += np.transpose(tensor, (1, 3, 5, 4, 2, 0))
        X += np.transpose(tensor, (1, 4, 0, 2, 3, 5))
        X += np.transpose(tensor, (1, 4, 0, 2, 5, 3))
        X += np.transpose(tensor, (1, 4, 0, 3, 2, 5))
        X += np.transpose(tensor, (1, 4, 0, 3, 5, 2))
        X += np.transpose(tensor, (1, 4, 0, 5, 2, 3))
        X += np.transpose(tensor, (1, 4, 0, 5, 3, 2))
        X += np.transpose(tensor, (1, 4, 2, 0, 3, 5))
        X += np.transpose(tensor, (1, 4, 2, 0, 5, 3))
        X += np.transpose(tensor, (1, 4, 2, 3, 0, 5))
        X += np.transpose(tensor, (1, 4, 2, 3, 5, 0))
        X += np.transpose(tensor, (1, 4, 2, 5, 0, 3))
        X += np.transpose(tensor, (1, 4, 2, 5, 3, 0))
        X += np.transpose(tensor, (1, 4, 3, 0, 2, 5))
        X += np.transpose(tensor, (1, 4, 3, 0, 5, 2))
        X += np.transpose(tensor, (1, 4, 3, 2, 0, 5))
        X += np.transpose(tensor, (1, 4, 3, 2, 5, 0))
        X += np.transpose(tensor, (1, 4, 3, 5, 0, 2))
        X += np.transpose(tensor, (1, 4, 3, 5, 2, 0))
        X += np.transpose(tensor, (1, 4, 5, 0, 2, 3))
        X += np.transpose(tensor, (1, 4, 5, 0, 3, 2))
        X += np.transpose(tensor, (1, 4, 5, 2, 0, 3))
        X += np.transpose(tensor, (1, 4, 5, 2, 3, 0))
        X += np.transpose(tensor, (1, 4, 5, 3, 0, 2))
        X += np.transpose(tensor, (1, 4, 5, 3, 2, 0))
        X += np.transpose(tensor, (1, 5, 0, 2, 3, 4))
        X += np.transpose(tensor, (1, 5, 0, 2, 4, 3))
        X += np.transpose(tensor, (1, 5, 0, 3, 2, 4))
        X += np.transpose(tensor, (1, 5, 0, 3, 4, 2))
        X += np.transpose(tensor, (1, 5, 0, 4, 2, 3))
        X += np.transpose(tensor, (1, 5, 0, 4, 3, 2))
        X += np.transpose(tensor, (1, 5, 2, 0, 3, 4))
        X += np.transpose(tensor, (1, 5, 2, 0, 4, 3))
        X += np.transpose(tensor, (1, 5, 2, 3, 0, 4))
        X += np.transpose(tensor, (1, 5, 2, 3, 4, 0))
        X += np.transpose(tensor, (1, 5, 2, 4, 0, 3))
        X += np.transpose(tensor, (1, 5, 2, 4, 3, 0))
        X += np.transpose(tensor, (1, 5, 3, 0, 2, 4))
        X += np.transpose(tensor, (1, 5, 3, 0, 4, 2))
        X += np.transpose(tensor, (1, 5, 3, 2, 0, 4))
        X += np.transpose(tensor, (1, 5, 3, 2, 4, 0))
        X += np.transpose(tensor, (1, 5, 3, 4, 0, 2))
        X += np.transpose(tensor, (1, 5, 3, 4, 2, 0))
        X += np.transpose(tensor, (1, 5, 4, 0, 2, 3))
        X += np.transpose(tensor, (1, 5, 4, 0, 3, 2))
        X += np.transpose(tensor, (1, 5, 4, 2, 0, 3))
        X += np.transpose(tensor, (1, 5, 4, 2, 3, 0))
        X += np.transpose(tensor, (1, 5, 4, 3, 0, 2))
        X += np.transpose(tensor, (1, 5, 4, 3, 2, 0))
        X += np.transpose(tensor, (2, 0, 1, 3, 4, 5))
        X += np.transpose(tensor, (2, 0, 1, 3, 5, 4))
        X += np.transpose(tensor, (2, 0, 1, 4, 3, 5))
        X += np.transpose(tensor, (2, 0, 1, 4, 5, 3))
        X += np.transpose(tensor, (2, 0, 1, 5, 3, 4))
        X += np.transpose(tensor, (2, 0, 1, 5, 4, 3))
        X += np.transpose(tensor, (2, 0, 3, 1, 4, 5))
        X += np.transpose(tensor, (2, 0, 3, 1, 5, 4))
        X += np.transpose(tensor, (2, 0, 3, 4, 1, 5))
        X += np.transpose(tensor, (2, 0, 3, 4, 5, 1))
        X += np.transpose(tensor, (2, 0, 3, 5, 1, 4))
        X += np.transpose(tensor, (2, 0, 3, 5, 4, 1))
        X += np.transpose(tensor, (2, 0, 4, 1, 3, 5))
        X += np.transpose(tensor, (2, 0, 4, 1, 5, 3))
        X += np.transpose(tensor, (2, 0, 4, 3, 1, 5))
        X += np.transpose(tensor, (2, 0, 4, 3, 5, 1))
        X += np.transpose(tensor, (2, 0, 4, 5, 1, 3))
        X += np.transpose(tensor, (2, 0, 4, 5, 3, 1))
        X += np.transpose(tensor, (2, 0, 5, 1, 3, 4))
        X += np.transpose(tensor, (2, 0, 5, 1, 4, 3))
        X += np.transpose(tensor, (2, 0, 5, 3, 1, 4))
        X += np.transpose(tensor, (2, 0, 5, 3, 4, 1))
        X += np.transpose(tensor, (2, 0, 5, 4, 1, 3))
        X += np.transpose(tensor, (2, 0, 5, 4, 3, 1))
        X += np.transpose(tensor, (2, 1, 0, 3, 4, 5))
        X += np.transpose(tensor, (2, 1, 0, 3, 5, 4))
        X += np.transpose(tensor, (2, 1, 0, 4, 3, 5))
        X += np.transpose(tensor, (2, 1, 0, 4, 5, 3))
        X += np.transpose(tensor, (2, 1, 0, 5, 3, 4))
        X += np.transpose(tensor, (2, 1, 0, 5, 4, 3))
        X += np.transpose(tensor, (2, 1, 3, 0, 4, 5))
        X += np.transpose(tensor, (2, 1, 3, 0, 5, 4))
        X += np.transpose(tensor, (2, 1, 3, 4, 0, 5))
        X += np.transpose(tensor, (2, 1, 3, 4, 5, 0))
        X += np.transpose(tensor, (2, 1, 3, 5, 0, 4))
        X += np.transpose(tensor, (2, 1, 3, 5, 4, 0))
        X += np.transpose(tensor, (2, 1, 4, 0, 3, 5))
        X += np.transpose(tensor, (2, 1, 4, 0, 5, 3))
        X += np.transpose(tensor, (2, 1, 4, 3, 0, 5))
        X += np.transpose(tensor, (2, 1, 4, 3, 5, 0))
        X += np.transpose(tensor, (2, 1, 4, 5, 0, 3))
        X += np.transpose(tensor, (2, 1, 4, 5, 3, 0))
        X += np.transpose(tensor, (2, 1, 5, 0, 3, 4))
        X += np.transpose(tensor, (2, 1, 5, 0, 4, 3))
        X += np.transpose(tensor, (2, 1, 5, 3, 0, 4))
        X += np.transpose(tensor, (2, 1, 5, 3, 4, 0))
        X += np.transpose(tensor, (2, 1, 5, 4, 0, 3))
        X += np.transpose(tensor, (2, 1, 5, 4, 3, 0))
        X += np.transpose(tensor, (2, 3, 0, 1, 4, 5))
        X += np.transpose(tensor, (2, 3, 0, 1, 5, 4))
        X += np.transpose(tensor, (2, 3, 0, 4, 1, 5))
        X += np.transpose(tensor, (2, 3, 0, 4, 5, 1))
        X += np.transpose(tensor, (2, 3, 0, 5, 1, 4))
        X += np.transpose(tensor, (2, 3, 0, 5, 4, 1))
        X += np.transpose(tensor, (2, 3, 1, 0, 4, 5))
        X += np.transpose(tensor, (2, 3, 1, 0, 5, 4))
        X += np.transpose(tensor, (2, 3, 1, 4, 0, 5))
        X += np.transpose(tensor, (2, 3, 1, 4, 5, 0))
        X += np.transpose(tensor, (2, 3, 1, 5, 0, 4))
        X += np.transpose(tensor, (2, 3, 1, 5, 4, 0))
        X += np.transpose(tensor, (2, 3, 4, 0, 1, 5))
        X += np.transpose(tensor, (2, 3, 4, 0, 5, 1))
        X += np.transpose(tensor, (2, 3, 4, 1, 0, 5))
        X += np.transpose(tensor, (2, 3, 4, 1, 5, 0))
        X += np.transpose(tensor, (2, 3, 4, 5, 0, 1))
        X += np.transpose(tensor, (2, 3, 4, 5, 1, 0))
        X += np.transpose(tensor, (2, 3, 5, 0, 1, 4))
        X += np.transpose(tensor, (2, 3, 5, 0, 4, 1))
        X += np.transpose(tensor, (2, 3, 5, 1, 0, 4))
        X += np.transpose(tensor, (2, 3, 5, 1, 4, 0))
        X += np.transpose(tensor, (2, 3, 5, 4, 0, 1))
        X += np.transpose(tensor, (2, 3, 5, 4, 1, 0))
        X += np.transpose(tensor, (2, 4, 0, 1, 3, 5))
        X += np.transpose(tensor, (2, 4, 0, 1, 5, 3))
        X += np.transpose(tensor, (2, 4, 0, 3, 1, 5))
        X += np.transpose(tensor, (2, 4, 0, 3, 5, 1))
        X += np.transpose(tensor, (2, 4, 0, 5, 1, 3))
        X += np.transpose(tensor, (2, 4, 0, 5, 3, 1))
        X += np.transpose(tensor, (2, 4, 1, 0, 3, 5))
        X += np.transpose(tensor, (2, 4, 1, 0, 5, 3))
        X += np.transpose(tensor, (2, 4, 1, 3, 0, 5))
        X += np.transpose(tensor, (2, 4, 1, 3, 5, 0))
        X += np.transpose(tensor, (2, 4, 1, 5, 0, 3))
        X += np.transpose(tensor, (2, 4, 1, 5, 3, 0))
        X += np.transpose(tensor, (2, 4, 3, 0, 1, 5))
        X += np.transpose(tensor, (2, 4, 3, 0, 5, 1))
        X += np.transpose(tensor, (2, 4, 3, 1, 0, 5))
        X += np.transpose(tensor, (2, 4, 3, 1, 5, 0))
        X += np.transpose(tensor, (2, 4, 3, 5, 0, 1))
        X += np.transpose(tensor, (2, 4, 3, 5, 1, 0))
        X += np.transpose(tensor, (2, 4, 5, 0, 1, 3))
        X += np.transpose(tensor, (2, 4, 5, 0, 3, 1))
        X += np.transpose(tensor, (2, 4, 5, 1, 0, 3))
        X += np.transpose(tensor, (2, 4, 5, 1, 3, 0))
        X += np.transpose(tensor, (2, 4, 5, 3, 0, 1))
        X += np.transpose(tensor, (2, 4, 5, 3, 1, 0))
        X += np.transpose(tensor, (2, 5, 0, 1, 3, 4))
        X += np.transpose(tensor, (2, 5, 0, 1, 4, 3))
        X += np.transpose(tensor, (2, 5, 0, 3, 1, 4))
        X += np.transpose(tensor, (2, 5, 0, 3, 4, 1))
        X += np.transpose(tensor, (2, 5, 0, 4, 1, 3))
        X += np.transpose(tensor, (2, 5, 0, 4, 3, 1))
        X += np.transpose(tensor, (2, 5, 1, 0, 3, 4))
        X += np.transpose(tensor, (2, 5, 1, 0, 4, 3))
        X += np.transpose(tensor, (2, 5, 1, 3, 0, 4))
        X += np.transpose(tensor, (2, 5, 1, 3, 4, 0))
        X += np.transpose(tensor, (2, 5, 1, 4, 0, 3))
        X += np.transpose(tensor, (2, 5, 1, 4, 3, 0))
        X += np.transpose(tensor, (2, 5, 3, 0, 1, 4))
        X += np.transpose(tensor, (2, 5, 3, 0, 4, 1))
        X += np.transpose(tensor, (2, 5, 3, 1, 0, 4))
        X += np.transpose(tensor, (2, 5, 3, 1, 4, 0))
        X += np.transpose(tensor, (2, 5, 3, 4, 0, 1))
        X += np.transpose(tensor, (2, 5, 3, 4, 1, 0))
        X += np.transpose(tensor, (2, 5, 4, 0, 1, 3))
        X += np.transpose(tensor, (2, 5, 4, 0, 3, 1))
        X += np.transpose(tensor, (2, 5, 4, 1, 0, 3))
        X += np.transpose(tensor, (2, 5, 4, 1, 3, 0))
        X += np.transpose(tensor, (2, 5, 4, 3, 0, 1))
        X += np.transpose(tensor, (2, 5, 4, 3, 1, 0))
        X += np.transpose(tensor, (3, 0, 1, 2, 4, 5))
        X += np.transpose(tensor, (3, 0, 1, 2, 5, 4))
        X += np.transpose(tensor, (3, 0, 1, 4, 2, 5))
        X += np.transpose(tensor, (3, 0, 1, 4, 5, 2))
        X += np.transpose(tensor, (3, 0, 1, 5, 2, 4))
        X += np.transpose(tensor, (3, 0, 1, 5, 4, 2))
        X += np.transpose(tensor, (3, 0, 2, 1, 4, 5))
        X += np.transpose(tensor, (3, 0, 2, 1, 5, 4))
        X += np.transpose(tensor, (3, 0, 2, 4, 1, 5))
        X += np.transpose(tensor, (3, 0, 2, 4, 5, 1))
        X += np.transpose(tensor, (3, 0, 2, 5, 1, 4))
        X += np.transpose(tensor, (3, 0, 2, 5, 4, 1))
        X += np.transpose(tensor, (3, 0, 4, 1, 2, 5))
        X += np.transpose(tensor, (3, 0, 4, 1, 5, 2))
        X += np.transpose(tensor, (3, 0, 4, 2, 1, 5))
        X += np.transpose(tensor, (3, 0, 4, 2, 5, 1))
        X += np.transpose(tensor, (3, 0, 4, 5, 1, 2))
        X += np.transpose(tensor, (3, 0, 4, 5, 2, 1))
        X += np.transpose(tensor, (3, 0, 5, 1, 2, 4))
        X += np.transpose(tensor, (3, 0, 5, 1, 4, 2))
        X += np.transpose(tensor, (3, 0, 5, 2, 1, 4))
        X += np.transpose(tensor, (3, 0, 5, 2, 4, 1))
        X += np.transpose(tensor, (3, 0, 5, 4, 1, 2))
        X += np.transpose(tensor, (3, 0, 5, 4, 2, 1))
        X += np.transpose(tensor, (3, 1, 0, 2, 4, 5))
        X += np.transpose(tensor, (3, 1, 0, 2, 5, 4))
        X += np.transpose(tensor, (3, 1, 0, 4, 2, 5))
        X += np.transpose(tensor, (3, 1, 0, 4, 5, 2))
        X += np.transpose(tensor, (3, 1, 0, 5, 2, 4))
        X += np.transpose(tensor, (3, 1, 0, 5, 4, 2))
        X += np.transpose(tensor, (3, 1, 2, 0, 4, 5))
        X += np.transpose(tensor, (3, 1, 2, 0, 5, 4))
        X += np.transpose(tensor, (3, 1, 2, 4, 0, 5))
        X += np.transpose(tensor, (3, 1, 2, 4, 5, 0))
        X += np.transpose(tensor, (3, 1, 2, 5, 0, 4))
        X += np.transpose(tensor, (3, 1, 2, 5, 4, 0))
        X += np.transpose(tensor, (3, 1, 4, 0, 2, 5))
        X += np.transpose(tensor, (3, 1, 4, 0, 5, 2))
        X += np.transpose(tensor, (3, 1, 4, 2, 0, 5))
        X += np.transpose(tensor, (3, 1, 4, 2, 5, 0))
        X += np.transpose(tensor, (3, 1, 4, 5, 0, 2))
        X += np.transpose(tensor, (3, 1, 4, 5, 2, 0))
        X += np.transpose(tensor, (3, 1, 5, 0, 2, 4))
        X += np.transpose(tensor, (3, 1, 5, 0, 4, 2))
        X += np.transpose(tensor, (3, 1, 5, 2, 0, 4))
        X += np.transpose(tensor, (3, 1, 5, 2, 4, 0))
        X += np.transpose(tensor, (3, 1, 5, 4, 0, 2))
        X += np.transpose(tensor, (3, 1, 5, 4, 2, 0))
        X += np.transpose(tensor, (3, 2, 0, 1, 4, 5))
        X += np.transpose(tensor, (3, 2, 0, 1, 5, 4))
        X += np.transpose(tensor, (3, 2, 0, 4, 1, 5))
        X += np.transpose(tensor, (3, 2, 0, 4, 5, 1))
        X += np.transpose(tensor, (3, 2, 0, 5, 1, 4))
        X += np.transpose(tensor, (3, 2, 0, 5, 4, 1))
        X += np.transpose(tensor, (3, 2, 1, 0, 4, 5))
        X += np.transpose(tensor, (3, 2, 1, 0, 5, 4))
        X += np.transpose(tensor, (3, 2, 1, 4, 0, 5))
        X += np.transpose(tensor, (3, 2, 1, 4, 5, 0))
        X += np.transpose(tensor, (3, 2, 1, 5, 0, 4))
        X += np.transpose(tensor, (3, 2, 1, 5, 4, 0))
        X += np.transpose(tensor, (3, 2, 4, 0, 1, 5))
        X += np.transpose(tensor, (3, 2, 4, 0, 5, 1))
        X += np.transpose(tensor, (3, 2, 4, 1, 0, 5))
        X += np.transpose(tensor, (3, 2, 4, 1, 5, 0))
        X += np.transpose(tensor, (3, 2, 4, 5, 0, 1))
        X += np.transpose(tensor, (3, 2, 4, 5, 1, 0))
        X += np.transpose(tensor, (3, 2, 5, 0, 1, 4))
        X += np.transpose(tensor, (3, 2, 5, 0, 4, 1))
        X += np.transpose(tensor, (3, 2, 5, 1, 0, 4))
        X += np.transpose(tensor, (3, 2, 5, 1, 4, 0))
        X += np.transpose(tensor, (3, 2, 5, 4, 0, 1))
        X += np.transpose(tensor, (3, 2, 5, 4, 1, 0))
        X += np.transpose(tensor, (3, 4, 0, 1, 2, 5))
        X += np.transpose(tensor, (3, 4, 0, 1, 5, 2))
        X += np.transpose(tensor, (3, 4, 0, 2, 1, 5))
        X += np.transpose(tensor, (3, 4, 0, 2, 5, 1))
        X += np.transpose(tensor, (3, 4, 0, 5, 1, 2))
        X += np.transpose(tensor, (3, 4, 0, 5, 2, 1))
        X += np.transpose(tensor, (3, 4, 1, 0, 2, 5))
        X += np.transpose(tensor, (3, 4, 1, 0, 5, 2))
        X += np.transpose(tensor, (3, 4, 1, 2, 0, 5))
        X += np.transpose(tensor, (3, 4, 1, 2, 5, 0))
        X += np.transpose(tensor, (3, 4, 1, 5, 0, 2))
        X += np.transpose(tensor, (3, 4, 1, 5, 2, 0))
        X += np.transpose(tensor, (3, 4, 2, 0, 1, 5))
        X += np.transpose(tensor, (3, 4, 2, 0, 5, 1))
        X += np.transpose(tensor, (3, 4, 2, 1, 0, 5))
        X += np.transpose(tensor, (3, 4, 2, 1, 5, 0))
        X += np.transpose(tensor, (3, 4, 2, 5, 0, 1))
        X += np.transpose(tensor, (3, 4, 2, 5, 1, 0))
        X += np.transpose(tensor, (3, 4, 5, 0, 1, 2))
        X += np.transpose(tensor, (3, 4, 5, 0, 2, 1))
        X += np.transpose(tensor, (3, 4, 5, 1, 0, 2))
        X += np.transpose(tensor, (3, 4, 5, 1, 2, 0))
        X += np.transpose(tensor, (3, 4, 5, 2, 0, 1))
        X += np.transpose(tensor, (3, 4, 5, 2, 1, 0))
        X += np.transpose(tensor, (3, 5, 0, 1, 2, 4))
        X += np.transpose(tensor, (3, 5, 0, 1, 4, 2))
        X += np.transpose(tensor, (3, 5, 0, 2, 1, 4))
        X += np.transpose(tensor, (3, 5, 0, 2, 4, 1))
        X += np.transpose(tensor, (3, 5, 0, 4, 1, 2))
        X += np.transpose(tensor, (3, 5, 0, 4, 2, 1))
        X += np.transpose(tensor, (3, 5, 1, 0, 2, 4))
        X += np.transpose(tensor, (3, 5, 1, 0, 4, 2))
        X += np.transpose(tensor, (3, 5, 1, 2, 0, 4))
        X += np.transpose(tensor, (3, 5, 1, 2, 4, 0))
        X += np.transpose(tensor, (3, 5, 1, 4, 0, 2))
        X += np.transpose(tensor, (3, 5, 1, 4, 2, 0))
        X += np.transpose(tensor, (3, 5, 2, 0, 1, 4))
        X += np.transpose(tensor, (3, 5, 2, 0, 4, 1))
        X += np.transpose(tensor, (3, 5, 2, 1, 0, 4))
        X += np.transpose(tensor, (3, 5, 2, 1, 4, 0))
        X += np.transpose(tensor, (3, 5, 2, 4, 0, 1))
        X += np.transpose(tensor, (3, 5, 2, 4, 1, 0))
        X += np.transpose(tensor, (3, 5, 4, 0, 1, 2))
        X += np.transpose(tensor, (3, 5, 4, 0, 2, 1))
        X += np.transpose(tensor, (3, 5, 4, 1, 0, 2))
        X += np.transpose(tensor, (3, 5, 4, 1, 2, 0))
        X += np.transpose(tensor, (3, 5, 4, 2, 0, 1))
        X += np.transpose(tensor, (3, 5, 4, 2, 1, 0))
        X += np.transpose(tensor, (4, 0, 1, 2, 3, 5))
        X += np.transpose(tensor, (4, 0, 1, 2, 5, 3))
        X += np.transpose(tensor, (4, 0, 1, 3, 2, 5))
        X += np.transpose(tensor, (4, 0, 1, 3, 5, 2))
        X += np.transpose(tensor, (4, 0, 1, 5, 2, 3))
        X += np.transpose(tensor, (4, 0, 1, 5, 3, 2))
        X += np.transpose(tensor, (4, 0, 2, 1, 3, 5))
        X += np.transpose(tensor, (4, 0, 2, 1, 5, 3))
        X += np.transpose(tensor, (4, 0, 2, 3, 1, 5))
        X += np.transpose(tensor, (4, 0, 2, 3, 5, 1))
        X += np.transpose(tensor, (4, 0, 2, 5, 1, 3))
        X += np.transpose(tensor, (4, 0, 2, 5, 3, 1))
        X += np.transpose(tensor, (4, 0, 3, 1, 2, 5))
        X += np.transpose(tensor, (4, 0, 3, 1, 5, 2))
        X += np.transpose(tensor, (4, 0, 3, 2, 1, 5))
        X += np.transpose(tensor, (4, 0, 3, 2, 5, 1))
        X += np.transpose(tensor, (4, 0, 3, 5, 1, 2))
        X += np.transpose(tensor, (4, 0, 3, 5, 2, 1))
        X += np.transpose(tensor, (4, 0, 5, 1, 2, 3))
        X += np.transpose(tensor, (4, 0, 5, 1, 3, 2))
        X += np.transpose(tensor, (4, 0, 5, 2, 1, 3))
        X += np.transpose(tensor, (4, 0, 5, 2, 3, 1))
        X += np.transpose(tensor, (4, 0, 5, 3, 1, 2))
        X += np.transpose(tensor, (4, 0, 5, 3, 2, 1))
        X += np.transpose(tensor, (4, 1, 0, 2, 3, 5))
        X += np.transpose(tensor, (4, 1, 0, 2, 5, 3))
        X += np.transpose(tensor, (4, 1, 0, 3, 2, 5))
        X += np.transpose(tensor, (4, 1, 0, 3, 5, 2))
        X += np.transpose(tensor, (4, 1, 0, 5, 2, 3))
        X += np.transpose(tensor, (4, 1, 0, 5, 3, 2))
        X += np.transpose(tensor, (4, 1, 2, 0, 3, 5))
        X += np.transpose(tensor, (4, 1, 2, 0, 5, 3))
        X += np.transpose(tensor, (4, 1, 2, 3, 0, 5))
        X += np.transpose(tensor, (4, 1, 2, 3, 5, 0))
        X += np.transpose(tensor, (4, 1, 2, 5, 0, 3))
        X += np.transpose(tensor, (4, 1, 2, 5, 3, 0))
        X += np.transpose(tensor, (4, 1, 3, 0, 2, 5))
        X += np.transpose(tensor, (4, 1, 3, 0, 5, 2))
        X += np.transpose(tensor, (4, 1, 3, 2, 0, 5))
        X += np.transpose(tensor, (4, 1, 3, 2, 5, 0))
        X += np.transpose(tensor, (4, 1, 3, 5, 0, 2))
        X += np.transpose(tensor, (4, 1, 3, 5, 2, 0))
        X += np.transpose(tensor, (4, 1, 5, 0, 2, 3))
        X += np.transpose(tensor, (4, 1, 5, 0, 3, 2))
        X += np.transpose(tensor, (4, 1, 5, 2, 0, 3))
        X += np.transpose(tensor, (4, 1, 5, 2, 3, 0))
        X += np.transpose(tensor, (4, 1, 5, 3, 0, 2))
        X += np.transpose(tensor, (4, 1, 5, 3, 2, 0))
        X += np.transpose(tensor, (4, 2, 0, 1, 3, 5))
        X += np.transpose(tensor, (4, 2, 0, 1, 5, 3))
        X += np.transpose(tensor, (4, 2, 0, 3, 1, 5))
        X += np.transpose(tensor, (4, 2, 0, 3, 5, 1))
        X += np.transpose(tensor, (4, 2, 0, 5, 1, 3))
        X += np.transpose(tensor, (4, 2, 0, 5, 3, 1))
        X += np.transpose(tensor, (4, 2, 1, 0, 3, 5))
        X += np.transpose(tensor, (4, 2, 1, 0, 5, 3))
        X += np.transpose(tensor, (4, 2, 1, 3, 0, 5))
        X += np.transpose(tensor, (4, 2, 1, 3, 5, 0))
        X += np.transpose(tensor, (4, 2, 1, 5, 0, 3))
        X += np.transpose(tensor, (4, 2, 1, 5, 3, 0))
        X += np.transpose(tensor, (4, 2, 3, 0, 1, 5))
        X += np.transpose(tensor, (4, 2, 3, 0, 5, 1))
        X += np.transpose(tensor, (4, 2, 3, 1, 0, 5))
        X += np.transpose(tensor, (4, 2, 3, 1, 5, 0))
        X += np.transpose(tensor, (4, 2, 3, 5, 0, 1))
        X += np.transpose(tensor, (4, 2, 3, 5, 1, 0))
        X += np.transpose(tensor, (4, 2, 5, 0, 1, 3))
        X += np.transpose(tensor, (4, 2, 5, 0, 3, 1))
        X += np.transpose(tensor, (4, 2, 5, 1, 0, 3))
        X += np.transpose(tensor, (4, 2, 5, 1, 3, 0))
        X += np.transpose(tensor, (4, 2, 5, 3, 0, 1))
        X += np.transpose(tensor, (4, 2, 5, 3, 1, 0))
        X += np.transpose(tensor, (4, 3, 0, 1, 2, 5))
        X += np.transpose(tensor, (4, 3, 0, 1, 5, 2))
        X += np.transpose(tensor, (4, 3, 0, 2, 1, 5))
        X += np.transpose(tensor, (4, 3, 0, 2, 5, 1))
        X += np.transpose(tensor, (4, 3, 0, 5, 1, 2))
        X += np.transpose(tensor, (4, 3, 0, 5, 2, 1))
        X += np.transpose(tensor, (4, 3, 1, 0, 2, 5))
        X += np.transpose(tensor, (4, 3, 1, 0, 5, 2))
        X += np.transpose(tensor, (4, 3, 1, 2, 0, 5))
        X += np.transpose(tensor, (4, 3, 1, 2, 5, 0))
        X += np.transpose(tensor, (4, 3, 1, 5, 0, 2))
        X += np.transpose(tensor, (4, 3, 1, 5, 2, 0))
        X += np.transpose(tensor, (4, 3, 2, 0, 1, 5))
        X += np.transpose(tensor, (4, 3, 2, 0, 5, 1))
        X += np.transpose(tensor, (4, 3, 2, 1, 0, 5))
        X += np.transpose(tensor, (4, 3, 2, 1, 5, 0))
        X += np.transpose(tensor, (4, 3, 2, 5, 0, 1))
        X += np.transpose(tensor, (4, 3, 2, 5, 1, 0))
        X += np.transpose(tensor, (4, 3, 5, 0, 1, 2))
        X += np.transpose(tensor, (4, 3, 5, 0, 2, 1))
        X += np.transpose(tensor, (4, 3, 5, 1, 0, 2))
        X += np.transpose(tensor, (4, 3, 5, 1, 2, 0))
        X += np.transpose(tensor, (4, 3, 5, 2, 0, 1))
        X += np.transpose(tensor, (4, 3, 5, 2, 1, 0))
        X += np.transpose(tensor, (4, 5, 0, 1, 2, 3))
        X += np.transpose(tensor, (4, 5, 0, 1, 3, 2))
        X += np.transpose(tensor, (4, 5, 0, 2, 1, 3))
        X += np.transpose(tensor, (4, 5, 0, 2, 3, 1))
        X += np.transpose(tensor, (4, 5, 0, 3, 1, 2))
        X += np.transpose(tensor, (4, 5, 0, 3, 2, 1))
        X += np.transpose(tensor, (4, 5, 1, 0, 2, 3))
        X += np.transpose(tensor, (4, 5, 1, 0, 3, 2))
        X += np.transpose(tensor, (4, 5, 1, 2, 0, 3))
        X += np.transpose(tensor, (4, 5, 1, 2, 3, 0))
        X += np.transpose(tensor, (4, 5, 1, 3, 0, 2))
        X += np.transpose(tensor, (4, 5, 1, 3, 2, 0))
        X += np.transpose(tensor, (4, 5, 2, 0, 1, 3))
        X += np.transpose(tensor, (4, 5, 2, 0, 3, 1))
        X += np.transpose(tensor, (4, 5, 2, 1, 0, 3))
        X += np.transpose(tensor, (4, 5, 2, 1, 3, 0))
        X += np.transpose(tensor, (4, 5, 2, 3, 0, 1))
        X += np.transpose(tensor, (4, 5, 2, 3, 1, 0))
        X += np.transpose(tensor, (4, 5, 3, 0, 1, 2))
        X += np.transpose(tensor, (4, 5, 3, 0, 2, 1))
        X += np.transpose(tensor, (4, 5, 3, 1, 0, 2))
        X += np.transpose(tensor, (4, 5, 3, 1, 2, 0))
        X += np.transpose(tensor, (4, 5, 3, 2, 0, 1))
        X += np.transpose(tensor, (4, 5, 3, 2, 1, 0))
        X += np.transpose(tensor, (5, 0, 1, 2, 3, 4))
        X += np.transpose(tensor, (5, 0, 1, 2, 4, 3))
        X += np.transpose(tensor, (5, 0, 1, 3, 2, 4))
        X += np.transpose(tensor, (5, 0, 1, 3, 4, 2))
        X += np.transpose(tensor, (5, 0, 1, 4, 2, 3))
        X += np.transpose(tensor, (5, 0, 1, 4, 3, 2))
        X += np.transpose(tensor, (5, 0, 2, 1, 3, 4))
        X += np.transpose(tensor, (5, 0, 2, 1, 4, 3))
        X += np.transpose(tensor, (5, 0, 2, 3, 1, 4))
        X += np.transpose(tensor, (5, 0, 2, 3, 4, 1))
        X += np.transpose(tensor, (5, 0, 2, 4, 1, 3))
        X += np.transpose(tensor, (5, 0, 2, 4, 3, 1))
        X += np.transpose(tensor, (5, 0, 3, 1, 2, 4))
        X += np.transpose(tensor, (5, 0, 3, 1, 4, 2))
        X += np.transpose(tensor, (5, 0, 3, 2, 1, 4))
        X += np.transpose(tensor, (5, 0, 3, 2, 4, 1))
        X += np.transpose(tensor, (5, 0, 3, 4, 1, 2))
        X += np.transpose(tensor, (5, 0, 3, 4, 2, 1))
        X += np.transpose(tensor, (5, 0, 4, 1, 2, 3))
        X += np.transpose(tensor, (5, 0, 4, 1, 3, 2))
        X += np.transpose(tensor, (5, 0, 4, 2, 1, 3))
        X += np.transpose(tensor, (5, 0, 4, 2, 3, 1))
        X += np.transpose(tensor, (5, 0, 4, 3, 1, 2))
        X += np.transpose(tensor, (5, 0, 4, 3, 2, 1))
        X += np.transpose(tensor, (5, 1, 0, 2, 3, 4))
        X += np.transpose(tensor, (5, 1, 0, 2, 4, 3))
        X += np.transpose(tensor, (5, 1, 0, 3, 2, 4))
        X += np.transpose(tensor, (5, 1, 0, 3, 4, 2))
        X += np.transpose(tensor, (5, 1, 0, 4, 2, 3))
        X += np.transpose(tensor, (5, 1, 0, 4, 3, 2))
        X += np.transpose(tensor, (5, 1, 2, 0, 3, 4))
        X += np.transpose(tensor, (5, 1, 2, 0, 4, 3))
        X += np.transpose(tensor, (5, 1, 2, 3, 0, 4))
        X += np.transpose(tensor, (5, 1, 2, 3, 4, 0))
        X += np.transpose(tensor, (5, 1, 2, 4, 0, 3))
        X += np.transpose(tensor, (5, 1, 2, 4, 3, 0))
        X += np.transpose(tensor, (5, 1, 3, 0, 2, 4))
        X += np.transpose(tensor, (5, 1, 3, 0, 4, 2))
        X += np.transpose(tensor, (5, 1, 3, 2, 0, 4))
        X += np.transpose(tensor, (5, 1, 3, 2, 4, 0))
        X += np.transpose(tensor, (5, 1, 3, 4, 0, 2))
        X += np.transpose(tensor, (5, 1, 3, 4, 2, 0))
        X += np.transpose(tensor, (5, 1, 4, 0, 2, 3))
        X += np.transpose(tensor, (5, 1, 4, 0, 3, 2))
        X += np.transpose(tensor, (5, 1, 4, 2, 0, 3))
        X += np.transpose(tensor, (5, 1, 4, 2, 3, 0))
        X += np.transpose(tensor, (5, 1, 4, 3, 0, 2))
        X += np.transpose(tensor, (5, 1, 4, 3, 2, 0))
        X += np.transpose(tensor, (5, 2, 0, 1, 3, 4))
        X += np.transpose(tensor, (5, 2, 0, 1, 4, 3))
        X += np.transpose(tensor, (5, 2, 0, 3, 1, 4))
        X += np.transpose(tensor, (5, 2, 0, 3, 4, 1))
        X += np.transpose(tensor, (5, 2, 0, 4, 1, 3))
        X += np.transpose(tensor, (5, 2, 0, 4, 3, 1))
        X += np.transpose(tensor, (5, 2, 1, 0, 3, 4))
        X += np.transpose(tensor, (5, 2, 1, 0, 4, 3))
        X += np.transpose(tensor, (5, 2, 1, 3, 0, 4))
        X += np.transpose(tensor, (5, 2, 1, 3, 4, 0))
        X += np.transpose(tensor, (5, 2, 1, 4, 0, 3))
        X += np.transpose(tensor, (5, 2, 1, 4, 3, 0))
        X += np.transpose(tensor, (5, 2, 3, 0, 1, 4))
        X += np.transpose(tensor, (5, 2, 3, 0, 4, 1))
        X += np.transpose(tensor, (5, 2, 3, 1, 0, 4))
        X += np.transpose(tensor, (5, 2, 3, 1, 4, 0))
        X += np.transpose(tensor, (5, 2, 3, 4, 0, 1))
        X += np.transpose(tensor, (5, 2, 3, 4, 1, 0))
        X += np.transpose(tensor, (5, 2, 4, 0, 1, 3))
        X += np.transpose(tensor, (5, 2, 4, 0, 3, 1))
        X += np.transpose(tensor, (5, 2, 4, 1, 0, 3))
        X += np.transpose(tensor, (5, 2, 4, 1, 3, 0))
        X += np.transpose(tensor, (5, 2, 4, 3, 0, 1))
        X += np.transpose(tensor, (5, 2, 4, 3, 1, 0))
        X += np.transpose(tensor, (5, 3, 0, 1, 2, 4))
        X += np.transpose(tensor, (5, 3, 0, 1, 4, 2))
        X += np.transpose(tensor, (5, 3, 0, 2, 1, 4))
        X += np.transpose(tensor, (5, 3, 0, 2, 4, 1))
        X += np.transpose(tensor, (5, 3, 0, 4, 1, 2))
        X += np.transpose(tensor, (5, 3, 0, 4, 2, 1))
        X += np.transpose(tensor, (5, 3, 1, 0, 2, 4))
        X += np.transpose(tensor, (5, 3, 1, 0, 4, 2))
        X += np.transpose(tensor, (5, 3, 1, 2, 0, 4))
        X += np.transpose(tensor, (5, 3, 1, 2, 4, 0))
        X += np.transpose(tensor, (5, 3, 1, 4, 0, 2))
        X += np.transpose(tensor, (5, 3, 1, 4, 2, 0))
        X += np.transpose(tensor, (5, 3, 2, 0, 1, 4))
        X += np.transpose(tensor, (5, 3, 2, 0, 4, 1))
        X += np.transpose(tensor, (5, 3, 2, 1, 0, 4))
        X += np.transpose(tensor, (5, 3, 2, 1, 4, 0))
        X += np.transpose(tensor, (5, 3, 2, 4, 0, 1))
        X += np.transpose(tensor, (5, 3, 2, 4, 1, 0))
        X += np.transpose(tensor, (5, 3, 4, 0, 1, 2))
        X += np.transpose(tensor, (5, 3, 4, 0, 2, 1))
        X += np.transpose(tensor, (5, 3, 4, 1, 0, 2))
        X += np.transpose(tensor, (5, 3, 4, 1, 2, 0))
        X += np.transpose(tensor, (5, 3, 4, 2, 0, 1))
        X += np.transpose(tensor, (5, 3, 4, 2, 1, 0))
        X += np.transpose(tensor, (5, 4, 0, 1, 2, 3))
        X += np.transpose(tensor, (5, 4, 0, 1, 3, 2))
        X += np.transpose(tensor, (5, 4, 0, 2, 1, 3))
        X += np.transpose(tensor, (5, 4, 0, 2, 3, 1))
        X += np.transpose(tensor, (5, 4, 0, 3, 1, 2))
        X += np.transpose(tensor, (5, 4, 0, 3, 2, 1))
        X += np.transpose(tensor, (5, 4, 1, 0, 2, 3))
        X += np.transpose(tensor, (5, 4, 1, 0, 3, 2))
        X += np.transpose(tensor, (5, 4, 1, 2, 0, 3))
        X += np.transpose(tensor, (5, 4, 1, 2, 3, 0))
        X += np.transpose(tensor, (5, 4, 1, 3, 0, 2))
        X += np.transpose(tensor, (5, 4, 1, 3, 2, 0))
        X += np.transpose(tensor, (5, 4, 2, 0, 1, 3))
        X += np.transpose(tensor, (5, 4, 2, 0, 3, 1))
        X += np.transpose(tensor, (5, 4, 2, 1, 0, 3))
        X += np.transpose(tensor, (5, 4, 2, 1, 3, 0))
        X += np.transpose(tensor, (5, 4, 2, 3, 0, 1))
        X += np.transpose(tensor, (5, 4, 2, 3, 1, 0))
        X += np.transpose(tensor, (5, 4, 3, 0, 1, 2))
        X += np.transpose(tensor, (5, 4, 3, 0, 2, 1))
        X += np.transpose(tensor, (5, 4, 3, 1, 0, 2))
        X += np.transpose(tensor, (5, 4, 3, 1, 2, 0))
        X += np.transpose(tensor, (5, 4, 3, 2, 0, 1))
        X += np.transpose(tensor, (5, 4, 3, 2, 1, 0))
        X += np.transpose(tensor, (5, 4, 3, 2, 1, 0))
    return X


def _transpose_symmetrize_A(N, tensor, order):
    """Symmetrizing a tensor (the W operator or the residual) by tracing over all permutations.

    This assumes that the tensor has shape:
        (A, N, ..., N)
    meaning that all but the leading dimension will be symmetrized.
    """
    X = np.zeros_like(tensor, dtype=complex)

    if order == 0 or order == 1:
        return tensor
    if order == 2:
        X += np.transpose(tensor, (0, 1, 2))
        X += np.transpose(tensor, (0, 2, 1))
    if order == 3:
        X += np.transpose(tensor, (0, 1, 2, 3))
        X += np.transpose(tensor, (0, 1, 3, 2))
        X += np.transpose(tensor, (0, 2, 1, 3))
        X += np.transpose(tensor, (0, 2, 3, 1))
        X += np.transpose(tensor, (0, 3, 1, 2))
        X += np.transpose(tensor, (0, 3, 2, 1))
    if order == 4:
        X += np.transpose(tensor, (0, 1, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 3, 2))
        X += np.transpose(tensor, (0, 2, 1, 3, 4))
        X += np.transpose(tensor, (0, 2, 1, 4, 3))
        X += np.transpose(tensor, (0, 2, 3, 1, 4))
        X += np.transpose(tensor, (0, 2, 3, 4, 1))
        X += np.transpose(tensor, (0, 2, 4, 1, 3))
        X += np.transpose(tensor, (0, 2, 4, 3, 1))
        X += np.transpose(tensor, (0, 3, 1, 2, 4))
        X += np.transpose(tensor, (0, 3, 1, 4, 2))
        X += np.transpose(tensor, (0, 3, 2, 1, 4))
        X += np.transpose(tensor, (0, 3, 2, 4, 1))
        X += np.transpose(tensor, (0, 3, 4, 1, 2))
        X += np.transpose(tensor, (0, 3, 4, 2, 1))
        X += np.transpose(tensor, (0, 4, 1, 2, 3))
        X += np.transpose(tensor, (0, 4, 1, 3, 2))
        X += np.transpose(tensor, (0, 4, 2, 1, 3))
        X += np.transpose(tensor, (0, 4, 2, 3, 1))
        X += np.transpose(tensor, (0, 4, 3, 1, 2))
        X += np.transpose(tensor, (0, 4, 3, 2, 1))
    if order == 4:
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 2))
        X += np.transpose(tensor, (0, 2, 1, 3, 4, 5))
        X += np.transpose(tensor, (0, 2, 1, 3, 5, 4))
        X += np.transpose(tensor, (0, 2, 1, 4, 3, 5))
        X += np.transpose(tensor, (0, 2, 1, 4, 5, 3))
        X += np.transpose(tensor, (0, 2, 1, 5, 3, 4))
        X += np.transpose(tensor, (0, 2, 1, 5, 4, 3))
        X += np.transpose(tensor, (0, 2, 3, 1, 4, 5))
        X += np.transpose(tensor, (0, 2, 3, 1, 5, 4))
        X += np.transpose(tensor, (0, 2, 3, 4, 1, 5))
        X += np.transpose(tensor, (0, 2, 3, 4, 5, 1))
        X += np.transpose(tensor, (0, 2, 3, 5, 1, 4))
        X += np.transpose(tensor, (0, 2, 3, 5, 4, 1))
        X += np.transpose(tensor, (0, 2, 4, 1, 3, 5))
        X += np.transpose(tensor, (0, 2, 4, 1, 5, 3))
        X += np.transpose(tensor, (0, 2, 4, 3, 1, 5))
        X += np.transpose(tensor, (0, 2, 4, 3, 5, 1))
        X += np.transpose(tensor, (0, 2, 4, 5, 1, 3))
        X += np.transpose(tensor, (0, 2, 4, 5, 3, 1))
        X += np.transpose(tensor, (0, 2, 5, 1, 3, 4))
        X += np.transpose(tensor, (0, 2, 5, 1, 4, 3))
        X += np.transpose(tensor, (0, 2, 5, 3, 1, 4))
        X += np.transpose(tensor, (0, 2, 5, 3, 4, 1))
        X += np.transpose(tensor, (0, 2, 5, 4, 1, 3))
        X += np.transpose(tensor, (0, 2, 5, 4, 3, 1))
        X += np.transpose(tensor, (0, 3, 1, 2, 4, 5))
        X += np.transpose(tensor, (0, 3, 1, 2, 5, 4))
        X += np.transpose(tensor, (0, 3, 1, 4, 2, 5))
        X += np.transpose(tensor, (0, 3, 1, 4, 5, 2))
        X += np.transpose(tensor, (0, 3, 1, 5, 2, 4))
        X += np.transpose(tensor, (0, 3, 1, 5, 4, 2))
        X += np.transpose(tensor, (0, 3, 2, 1, 4, 5))
        X += np.transpose(tensor, (0, 3, 2, 1, 5, 4))
        X += np.transpose(tensor, (0, 3, 2, 4, 1, 5))
        X += np.transpose(tensor, (0, 3, 2, 4, 5, 1))
        X += np.transpose(tensor, (0, 3, 2, 5, 1, 4))
        X += np.transpose(tensor, (0, 3, 2, 5, 4, 1))
        X += np.transpose(tensor, (0, 3, 4, 1, 2, 5))
        X += np.transpose(tensor, (0, 3, 4, 1, 5, 2))
        X += np.transpose(tensor, (0, 3, 4, 2, 1, 5))
        X += np.transpose(tensor, (0, 3, 4, 2, 5, 1))
        X += np.transpose(tensor, (0, 3, 4, 5, 1, 2))
        X += np.transpose(tensor, (0, 3, 4, 5, 2, 1))
        X += np.transpose(tensor, (0, 3, 5, 1, 2, 4))
        X += np.transpose(tensor, (0, 3, 5, 1, 4, 2))
        X += np.transpose(tensor, (0, 3, 5, 2, 1, 4))
        X += np.transpose(tensor, (0, 3, 5, 2, 4, 1))
        X += np.transpose(tensor, (0, 3, 5, 4, 1, 2))
        X += np.transpose(tensor, (0, 3, 5, 4, 2, 1))
        X += np.transpose(tensor, (0, 4, 1, 2, 3, 5))
        X += np.transpose(tensor, (0, 4, 1, 2, 5, 3))
        X += np.transpose(tensor, (0, 4, 1, 3, 2, 5))
        X += np.transpose(tensor, (0, 4, 1, 3, 5, 2))
        X += np.transpose(tensor, (0, 4, 1, 5, 2, 3))
        X += np.transpose(tensor, (0, 4, 1, 5, 3, 2))
        X += np.transpose(tensor, (0, 4, 2, 1, 3, 5))
        X += np.transpose(tensor, (0, 4, 2, 1, 5, 3))
        X += np.transpose(tensor, (0, 4, 2, 3, 1, 5))
        X += np.transpose(tensor, (0, 4, 2, 3, 5, 1))
        X += np.transpose(tensor, (0, 4, 2, 5, 1, 3))
        X += np.transpose(tensor, (0, 4, 2, 5, 3, 1))
        X += np.transpose(tensor, (0, 4, 3, 1, 2, 5))
        X += np.transpose(tensor, (0, 4, 3, 1, 5, 2))
        X += np.transpose(tensor, (0, 4, 3, 2, 1, 5))
        X += np.transpose(tensor, (0, 4, 3, 2, 5, 1))
        X += np.transpose(tensor, (0, 4, 3, 5, 1, 2))
        X += np.transpose(tensor, (0, 4, 3, 5, 2, 1))
        X += np.transpose(tensor, (0, 4, 5, 1, 2, 3))
        X += np.transpose(tensor, (0, 4, 5, 1, 3, 2))
        X += np.transpose(tensor, (0, 4, 5, 2, 1, 3))
        X += np.transpose(tensor, (0, 4, 5, 2, 3, 1))
        X += np.transpose(tensor, (0, 4, 5, 3, 1, 2))
        X += np.transpose(tensor, (0, 4, 5, 3, 2, 1))
        X += np.transpose(tensor, (0, 5, 1, 2, 3, 4))
        X += np.transpose(tensor, (0, 5, 1, 2, 4, 3))
        X += np.transpose(tensor, (0, 5, 1, 3, 2, 4))
        X += np.transpose(tensor, (0, 5, 1, 3, 4, 2))
        X += np.transpose(tensor, (0, 5, 1, 4, 2, 3))
        X += np.transpose(tensor, (0, 5, 1, 4, 3, 2))
        X += np.transpose(tensor, (0, 5, 2, 1, 3, 4))
        X += np.transpose(tensor, (0, 5, 2, 1, 4, 3))
        X += np.transpose(tensor, (0, 5, 2, 3, 1, 4))
        X += np.transpose(tensor, (0, 5, 2, 3, 4, 1))
        X += np.transpose(tensor, (0, 5, 2, 4, 1, 3))
        X += np.transpose(tensor, (0, 5, 2, 4, 3, 1))
        X += np.transpose(tensor, (0, 5, 3, 1, 2, 4))
        X += np.transpose(tensor, (0, 5, 3, 1, 4, 2))
        X += np.transpose(tensor, (0, 5, 3, 2, 1, 4))
        X += np.transpose(tensor, (0, 5, 3, 2, 4, 1))
        X += np.transpose(tensor, (0, 5, 3, 4, 1, 2))
        X += np.transpose(tensor, (0, 5, 3, 4, 2, 1))
        X += np.transpose(tensor, (0, 5, 4, 1, 2, 3))
        X += np.transpose(tensor, (0, 5, 4, 1, 3, 2))
        X += np.transpose(tensor, (0, 5, 4, 2, 1, 3))
        X += np.transpose(tensor, (0, 5, 4, 2, 3, 1))
        X += np.transpose(tensor, (0, 5, 4, 3, 1, 2))
        X += np.transpose(tensor, (0, 5, 4, 3, 2, 1))
    if order == 5:
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 3, 2))
        X += np.transpose(tensor, (0, 2, 1, 3, 4, 5, 6))
        X += np.transpose(tensor, (0, 2, 1, 3, 4, 6, 5))
        X += np.transpose(tensor, (0, 2, 1, 3, 5, 4, 6))
        X += np.transpose(tensor, (0, 2, 1, 3, 5, 6, 4))
        X += np.transpose(tensor, (0, 2, 1, 3, 6, 4, 5))
        X += np.transpose(tensor, (0, 2, 1, 3, 6, 5, 4))
        X += np.transpose(tensor, (0, 2, 1, 4, 3, 5, 6))
        X += np.transpose(tensor, (0, 2, 1, 4, 3, 6, 5))
        X += np.transpose(tensor, (0, 2, 1, 4, 5, 3, 6))
        X += np.transpose(tensor, (0, 2, 1, 4, 5, 6, 3))
        X += np.transpose(tensor, (0, 2, 1, 4, 6, 3, 5))
        X += np.transpose(tensor, (0, 2, 1, 4, 6, 5, 3))
        X += np.transpose(tensor, (0, 2, 1, 5, 3, 4, 6))
        X += np.transpose(tensor, (0, 2, 1, 5, 3, 6, 4))
        X += np.transpose(tensor, (0, 2, 1, 5, 4, 3, 6))
        X += np.transpose(tensor, (0, 2, 1, 5, 4, 6, 3))
        X += np.transpose(tensor, (0, 2, 1, 5, 6, 3, 4))
        X += np.transpose(tensor, (0, 2, 1, 5, 6, 4, 3))
        X += np.transpose(tensor, (0, 2, 1, 6, 3, 4, 5))
        X += np.transpose(tensor, (0, 2, 1, 6, 3, 5, 4))
        X += np.transpose(tensor, (0, 2, 1, 6, 4, 3, 5))
        X += np.transpose(tensor, (0, 2, 1, 6, 4, 5, 3))
        X += np.transpose(tensor, (0, 2, 1, 6, 5, 3, 4))
        X += np.transpose(tensor, (0, 2, 1, 6, 5, 4, 3))
        X += np.transpose(tensor, (0, 2, 3, 1, 4, 5, 6))
        X += np.transpose(tensor, (0, 2, 3, 1, 4, 6, 5))
        X += np.transpose(tensor, (0, 2, 3, 1, 5, 4, 6))
        X += np.transpose(tensor, (0, 2, 3, 1, 5, 6, 4))
        X += np.transpose(tensor, (0, 2, 3, 1, 6, 4, 5))
        X += np.transpose(tensor, (0, 2, 3, 1, 6, 5, 4))
        X += np.transpose(tensor, (0, 2, 3, 4, 1, 5, 6))
        X += np.transpose(tensor, (0, 2, 3, 4, 1, 6, 5))
        X += np.transpose(tensor, (0, 2, 3, 4, 5, 1, 6))
        X += np.transpose(tensor, (0, 2, 3, 4, 5, 6, 1))
        X += np.transpose(tensor, (0, 2, 3, 4, 6, 1, 5))
        X += np.transpose(tensor, (0, 2, 3, 4, 6, 5, 1))
        X += np.transpose(tensor, (0, 2, 3, 5, 1, 4, 6))
        X += np.transpose(tensor, (0, 2, 3, 5, 1, 6, 4))
        X += np.transpose(tensor, (0, 2, 3, 5, 4, 1, 6))
        X += np.transpose(tensor, (0, 2, 3, 5, 4, 6, 1))
        X += np.transpose(tensor, (0, 2, 3, 5, 6, 1, 4))
        X += np.transpose(tensor, (0, 2, 3, 5, 6, 4, 1))
        X += np.transpose(tensor, (0, 2, 3, 6, 1, 4, 5))
        X += np.transpose(tensor, (0, 2, 3, 6, 1, 5, 4))
        X += np.transpose(tensor, (0, 2, 3, 6, 4, 1, 5))
        X += np.transpose(tensor, (0, 2, 3, 6, 4, 5, 1))
        X += np.transpose(tensor, (0, 2, 3, 6, 5, 1, 4))
        X += np.transpose(tensor, (0, 2, 3, 6, 5, 4, 1))
        X += np.transpose(tensor, (0, 2, 4, 1, 3, 5, 6))
        X += np.transpose(tensor, (0, 2, 4, 1, 3, 6, 5))
        X += np.transpose(tensor, (0, 2, 4, 1, 5, 3, 6))
        X += np.transpose(tensor, (0, 2, 4, 1, 5, 6, 3))
        X += np.transpose(tensor, (0, 2, 4, 1, 6, 3, 5))
        X += np.transpose(tensor, (0, 2, 4, 1, 6, 5, 3))
        X += np.transpose(tensor, (0, 2, 4, 3, 1, 5, 6))
        X += np.transpose(tensor, (0, 2, 4, 3, 1, 6, 5))
        X += np.transpose(tensor, (0, 2, 4, 3, 5, 1, 6))
        X += np.transpose(tensor, (0, 2, 4, 3, 5, 6, 1))
        X += np.transpose(tensor, (0, 2, 4, 3, 6, 1, 5))
        X += np.transpose(tensor, (0, 2, 4, 3, 6, 5, 1))
        X += np.transpose(tensor, (0, 2, 4, 5, 1, 3, 6))
        X += np.transpose(tensor, (0, 2, 4, 5, 1, 6, 3))
        X += np.transpose(tensor, (0, 2, 4, 5, 3, 1, 6))
        X += np.transpose(tensor, (0, 2, 4, 5, 3, 6, 1))
        X += np.transpose(tensor, (0, 2, 4, 5, 6, 1, 3))
        X += np.transpose(tensor, (0, 2, 4, 5, 6, 3, 1))
        X += np.transpose(tensor, (0, 2, 4, 6, 1, 3, 5))
        X += np.transpose(tensor, (0, 2, 4, 6, 1, 5, 3))
        X += np.transpose(tensor, (0, 2, 4, 6, 3, 1, 5))
        X += np.transpose(tensor, (0, 2, 4, 6, 3, 5, 1))
        X += np.transpose(tensor, (0, 2, 4, 6, 5, 1, 3))
        X += np.transpose(tensor, (0, 2, 4, 6, 5, 3, 1))
        X += np.transpose(tensor, (0, 2, 5, 1, 3, 4, 6))
        X += np.transpose(tensor, (0, 2, 5, 1, 3, 6, 4))
        X += np.transpose(tensor, (0, 2, 5, 1, 4, 3, 6))
        X += np.transpose(tensor, (0, 2, 5, 1, 4, 6, 3))
        X += np.transpose(tensor, (0, 2, 5, 1, 6, 3, 4))
        X += np.transpose(tensor, (0, 2, 5, 1, 6, 4, 3))
        X += np.transpose(tensor, (0, 2, 5, 3, 1, 4, 6))
        X += np.transpose(tensor, (0, 2, 5, 3, 1, 6, 4))
        X += np.transpose(tensor, (0, 2, 5, 3, 4, 1, 6))
        X += np.transpose(tensor, (0, 2, 5, 3, 4, 6, 1))
        X += np.transpose(tensor, (0, 2, 5, 3, 6, 1, 4))
        X += np.transpose(tensor, (0, 2, 5, 3, 6, 4, 1))
        X += np.transpose(tensor, (0, 2, 5, 4, 1, 3, 6))
        X += np.transpose(tensor, (0, 2, 5, 4, 1, 6, 3))
        X += np.transpose(tensor, (0, 2, 5, 4, 3, 1, 6))
        X += np.transpose(tensor, (0, 2, 5, 4, 3, 6, 1))
        X += np.transpose(tensor, (0, 2, 5, 4, 6, 1, 3))
        X += np.transpose(tensor, (0, 2, 5, 4, 6, 3, 1))
        X += np.transpose(tensor, (0, 2, 5, 6, 1, 3, 4))
        X += np.transpose(tensor, (0, 2, 5, 6, 1, 4, 3))
        X += np.transpose(tensor, (0, 2, 5, 6, 3, 1, 4))
        X += np.transpose(tensor, (0, 2, 5, 6, 3, 4, 1))
        X += np.transpose(tensor, (0, 2, 5, 6, 4, 1, 3))
        X += np.transpose(tensor, (0, 2, 5, 6, 4, 3, 1))
        X += np.transpose(tensor, (0, 2, 6, 1, 3, 4, 5))
        X += np.transpose(tensor, (0, 2, 6, 1, 3, 5, 4))
        X += np.transpose(tensor, (0, 2, 6, 1, 4, 3, 5))
        X += np.transpose(tensor, (0, 2, 6, 1, 4, 5, 3))
        X += np.transpose(tensor, (0, 2, 6, 1, 5, 3, 4))
        X += np.transpose(tensor, (0, 2, 6, 1, 5, 4, 3))
        X += np.transpose(tensor, (0, 2, 6, 3, 1, 4, 5))
        X += np.transpose(tensor, (0, 2, 6, 3, 1, 5, 4))
        X += np.transpose(tensor, (0, 2, 6, 3, 4, 1, 5))
        X += np.transpose(tensor, (0, 2, 6, 3, 4, 5, 1))
        X += np.transpose(tensor, (0, 2, 6, 3, 5, 1, 4))
        X += np.transpose(tensor, (0, 2, 6, 3, 5, 4, 1))
        X += np.transpose(tensor, (0, 2, 6, 4, 1, 3, 5))
        X += np.transpose(tensor, (0, 2, 6, 4, 1, 5, 3))
        X += np.transpose(tensor, (0, 2, 6, 4, 3, 1, 5))
        X += np.transpose(tensor, (0, 2, 6, 4, 3, 5, 1))
        X += np.transpose(tensor, (0, 2, 6, 4, 5, 1, 3))
        X += np.transpose(tensor, (0, 2, 6, 4, 5, 3, 1))
        X += np.transpose(tensor, (0, 2, 6, 5, 1, 3, 4))
        X += np.transpose(tensor, (0, 2, 6, 5, 1, 4, 3))
        X += np.transpose(tensor, (0, 2, 6, 5, 3, 1, 4))
        X += np.transpose(tensor, (0, 2, 6, 5, 3, 4, 1))
        X += np.transpose(tensor, (0, 2, 6, 5, 4, 1, 3))
        X += np.transpose(tensor, (0, 2, 6, 5, 4, 3, 1))
        X += np.transpose(tensor, (0, 3, 1, 2, 4, 5, 6))
        X += np.transpose(tensor, (0, 3, 1, 2, 4, 6, 5))
        X += np.transpose(tensor, (0, 3, 1, 2, 5, 4, 6))
        X += np.transpose(tensor, (0, 3, 1, 2, 5, 6, 4))
        X += np.transpose(tensor, (0, 3, 1, 2, 6, 4, 5))
        X += np.transpose(tensor, (0, 3, 1, 2, 6, 5, 4))
        X += np.transpose(tensor, (0, 3, 1, 4, 2, 5, 6))
        X += np.transpose(tensor, (0, 3, 1, 4, 2, 6, 5))
        X += np.transpose(tensor, (0, 3, 1, 4, 5, 2, 6))
        X += np.transpose(tensor, (0, 3, 1, 4, 5, 6, 2))
        X += np.transpose(tensor, (0, 3, 1, 4, 6, 2, 5))
        X += np.transpose(tensor, (0, 3, 1, 4, 6, 5, 2))
        X += np.transpose(tensor, (0, 3, 1, 5, 2, 4, 6))
        X += np.transpose(tensor, (0, 3, 1, 5, 2, 6, 4))
        X += np.transpose(tensor, (0, 3, 1, 5, 4, 2, 6))
        X += np.transpose(tensor, (0, 3, 1, 5, 4, 6, 2))
        X += np.transpose(tensor, (0, 3, 1, 5, 6, 2, 4))
        X += np.transpose(tensor, (0, 3, 1, 5, 6, 4, 2))
        X += np.transpose(tensor, (0, 3, 1, 6, 2, 4, 5))
        X += np.transpose(tensor, (0, 3, 1, 6, 2, 5, 4))
        X += np.transpose(tensor, (0, 3, 1, 6, 4, 2, 5))
        X += np.transpose(tensor, (0, 3, 1, 6, 4, 5, 2))
        X += np.transpose(tensor, (0, 3, 1, 6, 5, 2, 4))
        X += np.transpose(tensor, (0, 3, 1, 6, 5, 4, 2))
        X += np.transpose(tensor, (0, 3, 2, 1, 4, 5, 6))
        X += np.transpose(tensor, (0, 3, 2, 1, 4, 6, 5))
        X += np.transpose(tensor, (0, 3, 2, 1, 5, 4, 6))
        X += np.transpose(tensor, (0, 3, 2, 1, 5, 6, 4))
        X += np.transpose(tensor, (0, 3, 2, 1, 6, 4, 5))
        X += np.transpose(tensor, (0, 3, 2, 1, 6, 5, 4))
        X += np.transpose(tensor, (0, 3, 2, 4, 1, 5, 6))
        X += np.transpose(tensor, (0, 3, 2, 4, 1, 6, 5))
        X += np.transpose(tensor, (0, 3, 2, 4, 5, 1, 6))
        X += np.transpose(tensor, (0, 3, 2, 4, 5, 6, 1))
        X += np.transpose(tensor, (0, 3, 2, 4, 6, 1, 5))
        X += np.transpose(tensor, (0, 3, 2, 4, 6, 5, 1))
        X += np.transpose(tensor, (0, 3, 2, 5, 1, 4, 6))
        X += np.transpose(tensor, (0, 3, 2, 5, 1, 6, 4))
        X += np.transpose(tensor, (0, 3, 2, 5, 4, 1, 6))
        X += np.transpose(tensor, (0, 3, 2, 5, 4, 6, 1))
        X += np.transpose(tensor, (0, 3, 2, 5, 6, 1, 4))
        X += np.transpose(tensor, (0, 3, 2, 5, 6, 4, 1))
        X += np.transpose(tensor, (0, 3, 2, 6, 1, 4, 5))
        X += np.transpose(tensor, (0, 3, 2, 6, 1, 5, 4))
        X += np.transpose(tensor, (0, 3, 2, 6, 4, 1, 5))
        X += np.transpose(tensor, (0, 3, 2, 6, 4, 5, 1))
        X += np.transpose(tensor, (0, 3, 2, 6, 5, 1, 4))
        X += np.transpose(tensor, (0, 3, 2, 6, 5, 4, 1))
        X += np.transpose(tensor, (0, 3, 4, 1, 2, 5, 6))
        X += np.transpose(tensor, (0, 3, 4, 1, 2, 6, 5))
        X += np.transpose(tensor, (0, 3, 4, 1, 5, 2, 6))
        X += np.transpose(tensor, (0, 3, 4, 1, 5, 6, 2))
        X += np.transpose(tensor, (0, 3, 4, 1, 6, 2, 5))
        X += np.transpose(tensor, (0, 3, 4, 1, 6, 5, 2))
        X += np.transpose(tensor, (0, 3, 4, 2, 1, 5, 6))
        X += np.transpose(tensor, (0, 3, 4, 2, 1, 6, 5))
        X += np.transpose(tensor, (0, 3, 4, 2, 5, 1, 6))
        X += np.transpose(tensor, (0, 3, 4, 2, 5, 6, 1))
        X += np.transpose(tensor, (0, 3, 4, 2, 6, 1, 5))
        X += np.transpose(tensor, (0, 3, 4, 2, 6, 5, 1))
        X += np.transpose(tensor, (0, 3, 4, 5, 1, 2, 6))
        X += np.transpose(tensor, (0, 3, 4, 5, 1, 6, 2))
        X += np.transpose(tensor, (0, 3, 4, 5, 2, 1, 6))
        X += np.transpose(tensor, (0, 3, 4, 5, 2, 6, 1))
        X += np.transpose(tensor, (0, 3, 4, 5, 6, 1, 2))
        X += np.transpose(tensor, (0, 3, 4, 5, 6, 2, 1))
        X += np.transpose(tensor, (0, 3, 4, 6, 1, 2, 5))
        X += np.transpose(tensor, (0, 3, 4, 6, 1, 5, 2))
        X += np.transpose(tensor, (0, 3, 4, 6, 2, 1, 5))
        X += np.transpose(tensor, (0, 3, 4, 6, 2, 5, 1))
        X += np.transpose(tensor, (0, 3, 4, 6, 5, 1, 2))
        X += np.transpose(tensor, (0, 3, 4, 6, 5, 2, 1))
        X += np.transpose(tensor, (0, 3, 5, 1, 2, 4, 6))
        X += np.transpose(tensor, (0, 3, 5, 1, 2, 6, 4))
        X += np.transpose(tensor, (0, 3, 5, 1, 4, 2, 6))
        X += np.transpose(tensor, (0, 3, 5, 1, 4, 6, 2))
        X += np.transpose(tensor, (0, 3, 5, 1, 6, 2, 4))
        X += np.transpose(tensor, (0, 3, 5, 1, 6, 4, 2))
        X += np.transpose(tensor, (0, 3, 5, 2, 1, 4, 6))
        X += np.transpose(tensor, (0, 3, 5, 2, 1, 6, 4))
        X += np.transpose(tensor, (0, 3, 5, 2, 4, 1, 6))
        X += np.transpose(tensor, (0, 3, 5, 2, 4, 6, 1))
        X += np.transpose(tensor, (0, 3, 5, 2, 6, 1, 4))
        X += np.transpose(tensor, (0, 3, 5, 2, 6, 4, 1))
        X += np.transpose(tensor, (0, 3, 5, 4, 1, 2, 6))
        X += np.transpose(tensor, (0, 3, 5, 4, 1, 6, 2))
        X += np.transpose(tensor, (0, 3, 5, 4, 2, 1, 6))
        X += np.transpose(tensor, (0, 3, 5, 4, 2, 6, 1))
        X += np.transpose(tensor, (0, 3, 5, 4, 6, 1, 2))
        X += np.transpose(tensor, (0, 3, 5, 4, 6, 2, 1))
        X += np.transpose(tensor, (0, 3, 5, 6, 1, 2, 4))
        X += np.transpose(tensor, (0, 3, 5, 6, 1, 4, 2))
        X += np.transpose(tensor, (0, 3, 5, 6, 2, 1, 4))
        X += np.transpose(tensor, (0, 3, 5, 6, 2, 4, 1))
        X += np.transpose(tensor, (0, 3, 5, 6, 4, 1, 2))
        X += np.transpose(tensor, (0, 3, 5, 6, 4, 2, 1))
        X += np.transpose(tensor, (0, 3, 6, 1, 2, 4, 5))
        X += np.transpose(tensor, (0, 3, 6, 1, 2, 5, 4))
        X += np.transpose(tensor, (0, 3, 6, 1, 4, 2, 5))
        X += np.transpose(tensor, (0, 3, 6, 1, 4, 5, 2))
        X += np.transpose(tensor, (0, 3, 6, 1, 5, 2, 4))
        X += np.transpose(tensor, (0, 3, 6, 1, 5, 4, 2))
        X += np.transpose(tensor, (0, 3, 6, 2, 1, 4, 5))
        X += np.transpose(tensor, (0, 3, 6, 2, 1, 5, 4))
        X += np.transpose(tensor, (0, 3, 6, 2, 4, 1, 5))
        X += np.transpose(tensor, (0, 3, 6, 2, 4, 5, 1))
        X += np.transpose(tensor, (0, 3, 6, 2, 5, 1, 4))
        X += np.transpose(tensor, (0, 3, 6, 2, 5, 4, 1))
        X += np.transpose(tensor, (0, 3, 6, 4, 1, 2, 5))
        X += np.transpose(tensor, (0, 3, 6, 4, 1, 5, 2))
        X += np.transpose(tensor, (0, 3, 6, 4, 2, 1, 5))
        X += np.transpose(tensor, (0, 3, 6, 4, 2, 5, 1))
        X += np.transpose(tensor, (0, 3, 6, 4, 5, 1, 2))
        X += np.transpose(tensor, (0, 3, 6, 4, 5, 2, 1))
        X += np.transpose(tensor, (0, 3, 6, 5, 1, 2, 4))
        X += np.transpose(tensor, (0, 3, 6, 5, 1, 4, 2))
        X += np.transpose(tensor, (0, 3, 6, 5, 2, 1, 4))
        X += np.transpose(tensor, (0, 3, 6, 5, 2, 4, 1))
        X += np.transpose(tensor, (0, 3, 6, 5, 4, 1, 2))
        X += np.transpose(tensor, (0, 3, 6, 5, 4, 2, 1))
        X += np.transpose(tensor, (0, 4, 1, 2, 3, 5, 6))
        X += np.transpose(tensor, (0, 4, 1, 2, 3, 6, 5))
        X += np.transpose(tensor, (0, 4, 1, 2, 5, 3, 6))
        X += np.transpose(tensor, (0, 4, 1, 2, 5, 6, 3))
        X += np.transpose(tensor, (0, 4, 1, 2, 6, 3, 5))
        X += np.transpose(tensor, (0, 4, 1, 2, 6, 5, 3))
        X += np.transpose(tensor, (0, 4, 1, 3, 2, 5, 6))
        X += np.transpose(tensor, (0, 4, 1, 3, 2, 6, 5))
        X += np.transpose(tensor, (0, 4, 1, 3, 5, 2, 6))
        X += np.transpose(tensor, (0, 4, 1, 3, 5, 6, 2))
        X += np.transpose(tensor, (0, 4, 1, 3, 6, 2, 5))
        X += np.transpose(tensor, (0, 4, 1, 3, 6, 5, 2))
        X += np.transpose(tensor, (0, 4, 1, 5, 2, 3, 6))
        X += np.transpose(tensor, (0, 4, 1, 5, 2, 6, 3))
        X += np.transpose(tensor, (0, 4, 1, 5, 3, 2, 6))
        X += np.transpose(tensor, (0, 4, 1, 5, 3, 6, 2))
        X += np.transpose(tensor, (0, 4, 1, 5, 6, 2, 3))
        X += np.transpose(tensor, (0, 4, 1, 5, 6, 3, 2))
        X += np.transpose(tensor, (0, 4, 1, 6, 2, 3, 5))
        X += np.transpose(tensor, (0, 4, 1, 6, 2, 5, 3))
        X += np.transpose(tensor, (0, 4, 1, 6, 3, 2, 5))
        X += np.transpose(tensor, (0, 4, 1, 6, 3, 5, 2))
        X += np.transpose(tensor, (0, 4, 1, 6, 5, 2, 3))
        X += np.transpose(tensor, (0, 4, 1, 6, 5, 3, 2))
        X += np.transpose(tensor, (0, 4, 2, 1, 3, 5, 6))
        X += np.transpose(tensor, (0, 4, 2, 1, 3, 6, 5))
        X += np.transpose(tensor, (0, 4, 2, 1, 5, 3, 6))
        X += np.transpose(tensor, (0, 4, 2, 1, 5, 6, 3))
        X += np.transpose(tensor, (0, 4, 2, 1, 6, 3, 5))
        X += np.transpose(tensor, (0, 4, 2, 1, 6, 5, 3))
        X += np.transpose(tensor, (0, 4, 2, 3, 1, 5, 6))
        X += np.transpose(tensor, (0, 4, 2, 3, 1, 6, 5))
        X += np.transpose(tensor, (0, 4, 2, 3, 5, 1, 6))
        X += np.transpose(tensor, (0, 4, 2, 3, 5, 6, 1))
        X += np.transpose(tensor, (0, 4, 2, 3, 6, 1, 5))
        X += np.transpose(tensor, (0, 4, 2, 3, 6, 5, 1))
        X += np.transpose(tensor, (0, 4, 2, 5, 1, 3, 6))
        X += np.transpose(tensor, (0, 4, 2, 5, 1, 6, 3))
        X += np.transpose(tensor, (0, 4, 2, 5, 3, 1, 6))
        X += np.transpose(tensor, (0, 4, 2, 5, 3, 6, 1))
        X += np.transpose(tensor, (0, 4, 2, 5, 6, 1, 3))
        X += np.transpose(tensor, (0, 4, 2, 5, 6, 3, 1))
        X += np.transpose(tensor, (0, 4, 2, 6, 1, 3, 5))
        X += np.transpose(tensor, (0, 4, 2, 6, 1, 5, 3))
        X += np.transpose(tensor, (0, 4, 2, 6, 3, 1, 5))
        X += np.transpose(tensor, (0, 4, 2, 6, 3, 5, 1))
        X += np.transpose(tensor, (0, 4, 2, 6, 5, 1, 3))
        X += np.transpose(tensor, (0, 4, 2, 6, 5, 3, 1))
        X += np.transpose(tensor, (0, 4, 3, 1, 2, 5, 6))
        X += np.transpose(tensor, (0, 4, 3, 1, 2, 6, 5))
        X += np.transpose(tensor, (0, 4, 3, 1, 5, 2, 6))
        X += np.transpose(tensor, (0, 4, 3, 1, 5, 6, 2))
        X += np.transpose(tensor, (0, 4, 3, 1, 6, 2, 5))
        X += np.transpose(tensor, (0, 4, 3, 1, 6, 5, 2))
        X += np.transpose(tensor, (0, 4, 3, 2, 1, 5, 6))
        X += np.transpose(tensor, (0, 4, 3, 2, 1, 6, 5))
        X += np.transpose(tensor, (0, 4, 3, 2, 5, 1, 6))
        X += np.transpose(tensor, (0, 4, 3, 2, 5, 6, 1))
        X += np.transpose(tensor, (0, 4, 3, 2, 6, 1, 5))
        X += np.transpose(tensor, (0, 4, 3, 2, 6, 5, 1))
        X += np.transpose(tensor, (0, 4, 3, 5, 1, 2, 6))
        X += np.transpose(tensor, (0, 4, 3, 5, 1, 6, 2))
        X += np.transpose(tensor, (0, 4, 3, 5, 2, 1, 6))
        X += np.transpose(tensor, (0, 4, 3, 5, 2, 6, 1))
        X += np.transpose(tensor, (0, 4, 3, 5, 6, 1, 2))
        X += np.transpose(tensor, (0, 4, 3, 5, 6, 2, 1))
        X += np.transpose(tensor, (0, 4, 3, 6, 1, 2, 5))
        X += np.transpose(tensor, (0, 4, 3, 6, 1, 5, 2))
        X += np.transpose(tensor, (0, 4, 3, 6, 2, 1, 5))
        X += np.transpose(tensor, (0, 4, 3, 6, 2, 5, 1))
        X += np.transpose(tensor, (0, 4, 3, 6, 5, 1, 2))
        X += np.transpose(tensor, (0, 4, 3, 6, 5, 2, 1))
        X += np.transpose(tensor, (0, 4, 5, 1, 2, 3, 6))
        X += np.transpose(tensor, (0, 4, 5, 1, 2, 6, 3))
        X += np.transpose(tensor, (0, 4, 5, 1, 3, 2, 6))
        X += np.transpose(tensor, (0, 4, 5, 1, 3, 6, 2))
        X += np.transpose(tensor, (0, 4, 5, 1, 6, 2, 3))
        X += np.transpose(tensor, (0, 4, 5, 1, 6, 3, 2))
        X += np.transpose(tensor, (0, 4, 5, 2, 1, 3, 6))
        X += np.transpose(tensor, (0, 4, 5, 2, 1, 6, 3))
        X += np.transpose(tensor, (0, 4, 5, 2, 3, 1, 6))
        X += np.transpose(tensor, (0, 4, 5, 2, 3, 6, 1))
        X += np.transpose(tensor, (0, 4, 5, 2, 6, 1, 3))
        X += np.transpose(tensor, (0, 4, 5, 2, 6, 3, 1))
        X += np.transpose(tensor, (0, 4, 5, 3, 1, 2, 6))
        X += np.transpose(tensor, (0, 4, 5, 3, 1, 6, 2))
        X += np.transpose(tensor, (0, 4, 5, 3, 2, 1, 6))
        X += np.transpose(tensor, (0, 4, 5, 3, 2, 6, 1))
        X += np.transpose(tensor, (0, 4, 5, 3, 6, 1, 2))
        X += np.transpose(tensor, (0, 4, 5, 3, 6, 2, 1))
        X += np.transpose(tensor, (0, 4, 5, 6, 1, 2, 3))
        X += np.transpose(tensor, (0, 4, 5, 6, 1, 3, 2))
        X += np.transpose(tensor, (0, 4, 5, 6, 2, 1, 3))
        X += np.transpose(tensor, (0, 4, 5, 6, 2, 3, 1))
        X += np.transpose(tensor, (0, 4, 5, 6, 3, 1, 2))
        X += np.transpose(tensor, (0, 4, 5, 6, 3, 2, 1))
        X += np.transpose(tensor, (0, 4, 6, 1, 2, 3, 5))
        X += np.transpose(tensor, (0, 4, 6, 1, 2, 5, 3))
        X += np.transpose(tensor, (0, 4, 6, 1, 3, 2, 5))
        X += np.transpose(tensor, (0, 4, 6, 1, 3, 5, 2))
        X += np.transpose(tensor, (0, 4, 6, 1, 5, 2, 3))
        X += np.transpose(tensor, (0, 4, 6, 1, 5, 3, 2))
        X += np.transpose(tensor, (0, 4, 6, 2, 1, 3, 5))
        X += np.transpose(tensor, (0, 4, 6, 2, 1, 5, 3))
        X += np.transpose(tensor, (0, 4, 6, 2, 3, 1, 5))
        X += np.transpose(tensor, (0, 4, 6, 2, 3, 5, 1))
        X += np.transpose(tensor, (0, 4, 6, 2, 5, 1, 3))
        X += np.transpose(tensor, (0, 4, 6, 2, 5, 3, 1))
        X += np.transpose(tensor, (0, 4, 6, 3, 1, 2, 5))
        X += np.transpose(tensor, (0, 4, 6, 3, 1, 5, 2))
        X += np.transpose(tensor, (0, 4, 6, 3, 2, 1, 5))
        X += np.transpose(tensor, (0, 4, 6, 3, 2, 5, 1))
        X += np.transpose(tensor, (0, 4, 6, 3, 5, 1, 2))
        X += np.transpose(tensor, (0, 4, 6, 3, 5, 2, 1))
        X += np.transpose(tensor, (0, 4, 6, 5, 1, 2, 3))
        X += np.transpose(tensor, (0, 4, 6, 5, 1, 3, 2))
        X += np.transpose(tensor, (0, 4, 6, 5, 2, 1, 3))
        X += np.transpose(tensor, (0, 4, 6, 5, 2, 3, 1))
        X += np.transpose(tensor, (0, 4, 6, 5, 3, 1, 2))
        X += np.transpose(tensor, (0, 4, 6, 5, 3, 2, 1))
        X += np.transpose(tensor, (0, 5, 1, 2, 3, 4, 6))
        X += np.transpose(tensor, (0, 5, 1, 2, 3, 6, 4))
        X += np.transpose(tensor, (0, 5, 1, 2, 4, 3, 6))
        X += np.transpose(tensor, (0, 5, 1, 2, 4, 6, 3))
        X += np.transpose(tensor, (0, 5, 1, 2, 6, 3, 4))
        X += np.transpose(tensor, (0, 5, 1, 2, 6, 4, 3))
        X += np.transpose(tensor, (0, 5, 1, 3, 2, 4, 6))
        X += np.transpose(tensor, (0, 5, 1, 3, 2, 6, 4))
        X += np.transpose(tensor, (0, 5, 1, 3, 4, 2, 6))
        X += np.transpose(tensor, (0, 5, 1, 3, 4, 6, 2))
        X += np.transpose(tensor, (0, 5, 1, 3, 6, 2, 4))
        X += np.transpose(tensor, (0, 5, 1, 3, 6, 4, 2))
        X += np.transpose(tensor, (0, 5, 1, 4, 2, 3, 6))
        X += np.transpose(tensor, (0, 5, 1, 4, 2, 6, 3))
        X += np.transpose(tensor, (0, 5, 1, 4, 3, 2, 6))
        X += np.transpose(tensor, (0, 5, 1, 4, 3, 6, 2))
        X += np.transpose(tensor, (0, 5, 1, 4, 6, 2, 3))
        X += np.transpose(tensor, (0, 5, 1, 4, 6, 3, 2))
        X += np.transpose(tensor, (0, 5, 1, 6, 2, 3, 4))
        X += np.transpose(tensor, (0, 5, 1, 6, 2, 4, 3))
        X += np.transpose(tensor, (0, 5, 1, 6, 3, 2, 4))
        X += np.transpose(tensor, (0, 5, 1, 6, 3, 4, 2))
        X += np.transpose(tensor, (0, 5, 1, 6, 4, 2, 3))
        X += np.transpose(tensor, (0, 5, 1, 6, 4, 3, 2))
        X += np.transpose(tensor, (0, 5, 2, 1, 3, 4, 6))
        X += np.transpose(tensor, (0, 5, 2, 1, 3, 6, 4))
        X += np.transpose(tensor, (0, 5, 2, 1, 4, 3, 6))
        X += np.transpose(tensor, (0, 5, 2, 1, 4, 6, 3))
        X += np.transpose(tensor, (0, 5, 2, 1, 6, 3, 4))
        X += np.transpose(tensor, (0, 5, 2, 1, 6, 4, 3))
        X += np.transpose(tensor, (0, 5, 2, 3, 1, 4, 6))
        X += np.transpose(tensor, (0, 5, 2, 3, 1, 6, 4))
        X += np.transpose(tensor, (0, 5, 2, 3, 4, 1, 6))
        X += np.transpose(tensor, (0, 5, 2, 3, 4, 6, 1))
        X += np.transpose(tensor, (0, 5, 2, 3, 6, 1, 4))
        X += np.transpose(tensor, (0, 5, 2, 3, 6, 4, 1))
        X += np.transpose(tensor, (0, 5, 2, 4, 1, 3, 6))
        X += np.transpose(tensor, (0, 5, 2, 4, 1, 6, 3))
        X += np.transpose(tensor, (0, 5, 2, 4, 3, 1, 6))
        X += np.transpose(tensor, (0, 5, 2, 4, 3, 6, 1))
        X += np.transpose(tensor, (0, 5, 2, 4, 6, 1, 3))
        X += np.transpose(tensor, (0, 5, 2, 4, 6, 3, 1))
        X += np.transpose(tensor, (0, 5, 2, 6, 1, 3, 4))
        X += np.transpose(tensor, (0, 5, 2, 6, 1, 4, 3))
        X += np.transpose(tensor, (0, 5, 2, 6, 3, 1, 4))
        X += np.transpose(tensor, (0, 5, 2, 6, 3, 4, 1))
        X += np.transpose(tensor, (0, 5, 2, 6, 4, 1, 3))
        X += np.transpose(tensor, (0, 5, 2, 6, 4, 3, 1))
        X += np.transpose(tensor, (0, 5, 3, 1, 2, 4, 6))
        X += np.transpose(tensor, (0, 5, 3, 1, 2, 6, 4))
        X += np.transpose(tensor, (0, 5, 3, 1, 4, 2, 6))
        X += np.transpose(tensor, (0, 5, 3, 1, 4, 6, 2))
        X += np.transpose(tensor, (0, 5, 3, 1, 6, 2, 4))
        X += np.transpose(tensor, (0, 5, 3, 1, 6, 4, 2))
        X += np.transpose(tensor, (0, 5, 3, 2, 1, 4, 6))
        X += np.transpose(tensor, (0, 5, 3, 2, 1, 6, 4))
        X += np.transpose(tensor, (0, 5, 3, 2, 4, 1, 6))
        X += np.transpose(tensor, (0, 5, 3, 2, 4, 6, 1))
        X += np.transpose(tensor, (0, 5, 3, 2, 6, 1, 4))
        X += np.transpose(tensor, (0, 5, 3, 2, 6, 4, 1))
        X += np.transpose(tensor, (0, 5, 3, 4, 1, 2, 6))
        X += np.transpose(tensor, (0, 5, 3, 4, 1, 6, 2))
        X += np.transpose(tensor, (0, 5, 3, 4, 2, 1, 6))
        X += np.transpose(tensor, (0, 5, 3, 4, 2, 6, 1))
        X += np.transpose(tensor, (0, 5, 3, 4, 6, 1, 2))
        X += np.transpose(tensor, (0, 5, 3, 4, 6, 2, 1))
        X += np.transpose(tensor, (0, 5, 3, 6, 1, 2, 4))
        X += np.transpose(tensor, (0, 5, 3, 6, 1, 4, 2))
        X += np.transpose(tensor, (0, 5, 3, 6, 2, 1, 4))
        X += np.transpose(tensor, (0, 5, 3, 6, 2, 4, 1))
        X += np.transpose(tensor, (0, 5, 3, 6, 4, 1, 2))
        X += np.transpose(tensor, (0, 5, 3, 6, 4, 2, 1))
        X += np.transpose(tensor, (0, 5, 4, 1, 2, 3, 6))
        X += np.transpose(tensor, (0, 5, 4, 1, 2, 6, 3))
        X += np.transpose(tensor, (0, 5, 4, 1, 3, 2, 6))
        X += np.transpose(tensor, (0, 5, 4, 1, 3, 6, 2))
        X += np.transpose(tensor, (0, 5, 4, 1, 6, 2, 3))
        X += np.transpose(tensor, (0, 5, 4, 1, 6, 3, 2))
        X += np.transpose(tensor, (0, 5, 4, 2, 1, 3, 6))
        X += np.transpose(tensor, (0, 5, 4, 2, 1, 6, 3))
        X += np.transpose(tensor, (0, 5, 4, 2, 3, 1, 6))
        X += np.transpose(tensor, (0, 5, 4, 2, 3, 6, 1))
        X += np.transpose(tensor, (0, 5, 4, 2, 6, 1, 3))
        X += np.transpose(tensor, (0, 5, 4, 2, 6, 3, 1))
        X += np.transpose(tensor, (0, 5, 4, 3, 1, 2, 6))
        X += np.transpose(tensor, (0, 5, 4, 3, 1, 6, 2))
        X += np.transpose(tensor, (0, 5, 4, 3, 2, 1, 6))
        X += np.transpose(tensor, (0, 5, 4, 3, 2, 6, 1))
        X += np.transpose(tensor, (0, 5, 4, 3, 6, 1, 2))
        X += np.transpose(tensor, (0, 5, 4, 3, 6, 2, 1))
        X += np.transpose(tensor, (0, 5, 4, 6, 1, 2, 3))
        X += np.transpose(tensor, (0, 5, 4, 6, 1, 3, 2))
        X += np.transpose(tensor, (0, 5, 4, 6, 2, 1, 3))
        X += np.transpose(tensor, (0, 5, 4, 6, 2, 3, 1))
        X += np.transpose(tensor, (0, 5, 4, 6, 3, 1, 2))
        X += np.transpose(tensor, (0, 5, 4, 6, 3, 2, 1))
        X += np.transpose(tensor, (0, 5, 6, 1, 2, 3, 4))
        X += np.transpose(tensor, (0, 5, 6, 1, 2, 4, 3))
        X += np.transpose(tensor, (0, 5, 6, 1, 3, 2, 4))
        X += np.transpose(tensor, (0, 5, 6, 1, 3, 4, 2))
        X += np.transpose(tensor, (0, 5, 6, 1, 4, 2, 3))
        X += np.transpose(tensor, (0, 5, 6, 1, 4, 3, 2))
        X += np.transpose(tensor, (0, 5, 6, 2, 1, 3, 4))
        X += np.transpose(tensor, (0, 5, 6, 2, 1, 4, 3))
        X += np.transpose(tensor, (0, 5, 6, 2, 3, 1, 4))
        X += np.transpose(tensor, (0, 5, 6, 2, 3, 4, 1))
        X += np.transpose(tensor, (0, 5, 6, 2, 4, 1, 3))
        X += np.transpose(tensor, (0, 5, 6, 2, 4, 3, 1))
        X += np.transpose(tensor, (0, 5, 6, 3, 1, 2, 4))
        X += np.transpose(tensor, (0, 5, 6, 3, 1, 4, 2))
        X += np.transpose(tensor, (0, 5, 6, 3, 2, 1, 4))
        X += np.transpose(tensor, (0, 5, 6, 3, 2, 4, 1))
        X += np.transpose(tensor, (0, 5, 6, 3, 4, 1, 2))
        X += np.transpose(tensor, (0, 5, 6, 3, 4, 2, 1))
        X += np.transpose(tensor, (0, 5, 6, 4, 1, 2, 3))
        X += np.transpose(tensor, (0, 5, 6, 4, 1, 3, 2))
        X += np.transpose(tensor, (0, 5, 6, 4, 2, 1, 3))
        X += np.transpose(tensor, (0, 5, 6, 4, 2, 3, 1))
        X += np.transpose(tensor, (0, 5, 6, 4, 3, 1, 2))
        X += np.transpose(tensor, (0, 5, 6, 4, 3, 2, 1))
        X += np.transpose(tensor, (0, 6, 1, 2, 3, 4, 5))
        X += np.transpose(tensor, (0, 6, 1, 2, 3, 5, 4))
        X += np.transpose(tensor, (0, 6, 1, 2, 4, 3, 5))
        X += np.transpose(tensor, (0, 6, 1, 2, 4, 5, 3))
        X += np.transpose(tensor, (0, 6, 1, 2, 5, 3, 4))
        X += np.transpose(tensor, (0, 6, 1, 2, 5, 4, 3))
        X += np.transpose(tensor, (0, 6, 1, 3, 2, 4, 5))
        X += np.transpose(tensor, (0, 6, 1, 3, 2, 5, 4))
        X += np.transpose(tensor, (0, 6, 1, 3, 4, 2, 5))
        X += np.transpose(tensor, (0, 6, 1, 3, 4, 5, 2))
        X += np.transpose(tensor, (0, 6, 1, 3, 5, 2, 4))
        X += np.transpose(tensor, (0, 6, 1, 3, 5, 4, 2))
        X += np.transpose(tensor, (0, 6, 1, 4, 2, 3, 5))
        X += np.transpose(tensor, (0, 6, 1, 4, 2, 5, 3))
        X += np.transpose(tensor, (0, 6, 1, 4, 3, 2, 5))
        X += np.transpose(tensor, (0, 6, 1, 4, 3, 5, 2))
        X += np.transpose(tensor, (0, 6, 1, 4, 5, 2, 3))
        X += np.transpose(tensor, (0, 6, 1, 4, 5, 3, 2))
        X += np.transpose(tensor, (0, 6, 1, 5, 2, 3, 4))
        X += np.transpose(tensor, (0, 6, 1, 5, 2, 4, 3))
        X += np.transpose(tensor, (0, 6, 1, 5, 3, 2, 4))
        X += np.transpose(tensor, (0, 6, 1, 5, 3, 4, 2))
        X += np.transpose(tensor, (0, 6, 1, 5, 4, 2, 3))
        X += np.transpose(tensor, (0, 6, 1, 5, 4, 3, 2))
        X += np.transpose(tensor, (0, 6, 2, 1, 3, 4, 5))
        X += np.transpose(tensor, (0, 6, 2, 1, 3, 5, 4))
        X += np.transpose(tensor, (0, 6, 2, 1, 4, 3, 5))
        X += np.transpose(tensor, (0, 6, 2, 1, 4, 5, 3))
        X += np.transpose(tensor, (0, 6, 2, 1, 5, 3, 4))
        X += np.transpose(tensor, (0, 6, 2, 1, 5, 4, 3))
        X += np.transpose(tensor, (0, 6, 2, 3, 1, 4, 5))
        X += np.transpose(tensor, (0, 6, 2, 3, 1, 5, 4))
        X += np.transpose(tensor, (0, 6, 2, 3, 4, 1, 5))
        X += np.transpose(tensor, (0, 6, 2, 3, 4, 5, 1))
        X += np.transpose(tensor, (0, 6, 2, 3, 5, 1, 4))
        X += np.transpose(tensor, (0, 6, 2, 3, 5, 4, 1))
        X += np.transpose(tensor, (0, 6, 2, 4, 1, 3, 5))
        X += np.transpose(tensor, (0, 6, 2, 4, 1, 5, 3))
        X += np.transpose(tensor, (0, 6, 2, 4, 3, 1, 5))
        X += np.transpose(tensor, (0, 6, 2, 4, 3, 5, 1))
        X += np.transpose(tensor, (0, 6, 2, 4, 5, 1, 3))
        X += np.transpose(tensor, (0, 6, 2, 4, 5, 3, 1))
        X += np.transpose(tensor, (0, 6, 2, 5, 1, 3, 4))
        X += np.transpose(tensor, (0, 6, 2, 5, 1, 4, 3))
        X += np.transpose(tensor, (0, 6, 2, 5, 3, 1, 4))
        X += np.transpose(tensor, (0, 6, 2, 5, 3, 4, 1))
        X += np.transpose(tensor, (0, 6, 2, 5, 4, 1, 3))
        X += np.transpose(tensor, (0, 6, 2, 5, 4, 3, 1))
        X += np.transpose(tensor, (0, 6, 3, 1, 2, 4, 5))
        X += np.transpose(tensor, (0, 6, 3, 1, 2, 5, 4))
        X += np.transpose(tensor, (0, 6, 3, 1, 4, 2, 5))
        X += np.transpose(tensor, (0, 6, 3, 1, 4, 5, 2))
        X += np.transpose(tensor, (0, 6, 3, 1, 5, 2, 4))
        X += np.transpose(tensor, (0, 6, 3, 1, 5, 4, 2))
        X += np.transpose(tensor, (0, 6, 3, 2, 1, 4, 5))
        X += np.transpose(tensor, (0, 6, 3, 2, 1, 5, 4))
        X += np.transpose(tensor, (0, 6, 3, 2, 4, 1, 5))
        X += np.transpose(tensor, (0, 6, 3, 2, 4, 5, 1))
        X += np.transpose(tensor, (0, 6, 3, 2, 5, 1, 4))
        X += np.transpose(tensor, (0, 6, 3, 2, 5, 4, 1))
        X += np.transpose(tensor, (0, 6, 3, 4, 1, 2, 5))
        X += np.transpose(tensor, (0, 6, 3, 4, 1, 5, 2))
        X += np.transpose(tensor, (0, 6, 3, 4, 2, 1, 5))
        X += np.transpose(tensor, (0, 6, 3, 4, 2, 5, 1))
        X += np.transpose(tensor, (0, 6, 3, 4, 5, 1, 2))
        X += np.transpose(tensor, (0, 6, 3, 4, 5, 2, 1))
        X += np.transpose(tensor, (0, 6, 3, 5, 1, 2, 4))
        X += np.transpose(tensor, (0, 6, 3, 5, 1, 4, 2))
        X += np.transpose(tensor, (0, 6, 3, 5, 2, 1, 4))
        X += np.transpose(tensor, (0, 6, 3, 5, 2, 4, 1))
        X += np.transpose(tensor, (0, 6, 3, 5, 4, 1, 2))
        X += np.transpose(tensor, (0, 6, 3, 5, 4, 2, 1))
        X += np.transpose(tensor, (0, 6, 4, 1, 2, 3, 5))
        X += np.transpose(tensor, (0, 6, 4, 1, 2, 5, 3))
        X += np.transpose(tensor, (0, 6, 4, 1, 3, 2, 5))
        X += np.transpose(tensor, (0, 6, 4, 1, 3, 5, 2))
        X += np.transpose(tensor, (0, 6, 4, 1, 5, 2, 3))
        X += np.transpose(tensor, (0, 6, 4, 1, 5, 3, 2))
        X += np.transpose(tensor, (0, 6, 4, 2, 1, 3, 5))
        X += np.transpose(tensor, (0, 6, 4, 2, 1, 5, 3))
        X += np.transpose(tensor, (0, 6, 4, 2, 3, 1, 5))
        X += np.transpose(tensor, (0, 6, 4, 2, 3, 5, 1))
        X += np.transpose(tensor, (0, 6, 4, 2, 5, 1, 3))
        X += np.transpose(tensor, (0, 6, 4, 2, 5, 3, 1))
        X += np.transpose(tensor, (0, 6, 4, 3, 1, 2, 5))
        X += np.transpose(tensor, (0, 6, 4, 3, 1, 5, 2))
        X += np.transpose(tensor, (0, 6, 4, 3, 2, 1, 5))
        X += np.transpose(tensor, (0, 6, 4, 3, 2, 5, 1))
        X += np.transpose(tensor, (0, 6, 4, 3, 5, 1, 2))
        X += np.transpose(tensor, (0, 6, 4, 3, 5, 2, 1))
        X += np.transpose(tensor, (0, 6, 4, 5, 1, 2, 3))
        X += np.transpose(tensor, (0, 6, 4, 5, 1, 3, 2))
        X += np.transpose(tensor, (0, 6, 4, 5, 2, 1, 3))
        X += np.transpose(tensor, (0, 6, 4, 5, 2, 3, 1))
        X += np.transpose(tensor, (0, 6, 4, 5, 3, 1, 2))
        X += np.transpose(tensor, (0, 6, 4, 5, 3, 2, 1))
        X += np.transpose(tensor, (0, 6, 5, 1, 2, 3, 4))
        X += np.transpose(tensor, (0, 6, 5, 1, 2, 4, 3))
        X += np.transpose(tensor, (0, 6, 5, 1, 3, 2, 4))
        X += np.transpose(tensor, (0, 6, 5, 1, 3, 4, 2))
        X += np.transpose(tensor, (0, 6, 5, 1, 4, 2, 3))
        X += np.transpose(tensor, (0, 6, 5, 1, 4, 3, 2))
        X += np.transpose(tensor, (0, 6, 5, 2, 1, 3, 4))
        X += np.transpose(tensor, (0, 6, 5, 2, 1, 4, 3))
        X += np.transpose(tensor, (0, 6, 5, 2, 3, 1, 4))
        X += np.transpose(tensor, (0, 6, 5, 2, 3, 4, 1))
        X += np.transpose(tensor, (0, 6, 5, 2, 4, 1, 3))
        X += np.transpose(tensor, (0, 6, 5, 2, 4, 3, 1))
        X += np.transpose(tensor, (0, 6, 5, 3, 1, 2, 4))
        X += np.transpose(tensor, (0, 6, 5, 3, 1, 4, 2))
        X += np.transpose(tensor, (0, 6, 5, 3, 2, 1, 4))
        X += np.transpose(tensor, (0, 6, 5, 3, 2, 4, 1))
        X += np.transpose(tensor, (0, 6, 5, 3, 4, 1, 2))
        X += np.transpose(tensor, (0, 6, 5, 3, 4, 2, 1))
        X += np.transpose(tensor, (0, 6, 5, 4, 1, 2, 3))
        X += np.transpose(tensor, (0, 6, 5, 4, 1, 3, 2))
        X += np.transpose(tensor, (0, 6, 5, 4, 2, 1, 3))
        X += np.transpose(tensor, (0, 6, 5, 4, 2, 3, 1))
        X += np.transpose(tensor, (0, 6, 5, 4, 3, 1, 2))
        X += np.transpose(tensor, (0, 6, 5, 4, 3, 2, 1))
    return X


def _transpose_symmetrize_AA(N, tensor, order):
    """Symmetrizing a tensor (the W operator or the residual) by tracing over all permutations.

    This assumes that the tensor has shape:
        (A, A, N, ..., N)
    meaning all but the first two dimensions will be symmetrized
    """
    X = np.zeros_like(tensor, dtype=complex)

    if order == 0 or order == 1:
        return tensor
    if order == 2:
        X += np.transpose(tensor, (0, 1, 2, 3))
        X += np.transpose(tensor, (0, 1, 3, 2))
    if order == 3:
        X += np.transpose(tensor, (0, 1, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 3, 2))
    if order == 4:
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 2))
    if order == 5:
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 3, 2))
    if order == 6:
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 5, 6, 7))
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 5, 7, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 6, 5, 7))
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 6, 7, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 7, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 4, 7, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 4, 6, 7))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 4, 7, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 6, 4, 7))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 6, 7, 4))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 7, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 5, 7, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 4, 5, 7))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 4, 7, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 5, 4, 7))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 5, 7, 4))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 7, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 6, 7, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 3, 7, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 7, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 7, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 3, 7, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 3, 7, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 3, 7, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 5, 6, 7))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 5, 7, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 6, 5, 7))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 6, 7, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 7, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 3, 7, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 3, 6, 7))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 3, 7, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 6, 3, 7))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 6, 7, 3))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 7, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 5, 7, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 3, 5, 7))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 3, 7, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 5, 3, 7))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 5, 7, 3))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 7, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 6, 7, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 4, 7, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 7, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 7, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 4, 7, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 4, 7, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 4, 7, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 4, 6, 7))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 4, 7, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 6, 4, 7))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 6, 7, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 7, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 3, 7, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 3, 6, 7))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 3, 7, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 6, 3, 7))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 6, 7, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 7, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 4, 7, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 3, 4, 7))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 3, 7, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 4, 3, 7))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 4, 7, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 7, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 6, 7, 4, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 7, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 7, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 7, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 5, 7, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 5, 7, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 5, 7, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 4, 5, 7))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 4, 7, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 5, 4, 7))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 5, 7, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 7, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 3, 7, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 3, 5, 7))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 3, 7, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 5, 3, 7))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 5, 7, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 7, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 4, 7, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 3, 4, 7))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 3, 7, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 4, 3, 7))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 4, 7, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 7, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 5, 7, 4, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 7, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 7, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 7, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 6, 7, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 6, 7, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 6, 7, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 2, 7, 3, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 7, 3, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 7, 3, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 7, 3, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 7, 3, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 7, 3, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 7, 4, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 2, 7, 4, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 2, 7, 4, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 7, 4, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 7, 4, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 7, 4, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 7, 5, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 2, 7, 5, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 2, 7, 5, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 2, 7, 5, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 2, 7, 5, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 7, 5, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 2, 7, 6, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 2, 7, 6, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 2, 7, 6, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 2, 7, 6, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 2, 7, 6, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 2, 7, 6, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 5, 6, 7))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 5, 7, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 6, 5, 7))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 6, 7, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 7, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 4, 7, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 4, 6, 7))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 4, 7, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 6, 4, 7))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 6, 7, 4))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 7, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 5, 7, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 4, 5, 7))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 4, 7, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 5, 4, 7))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 5, 7, 4))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 7, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 6, 7, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 2, 7, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 7, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 7, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 2, 7, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 2, 7, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 2, 7, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 5, 6, 7))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 5, 7, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 6, 5, 7))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 6, 7, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 7, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 2, 7, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 2, 6, 7))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 2, 7, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 6, 2, 7))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 6, 7, 2))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 7, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 5, 7, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 2, 5, 7))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 2, 7, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 5, 2, 7))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 5, 7, 2))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 7, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 6, 7, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 4, 7, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 7, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 7, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 4, 7, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 4, 7, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 4, 7, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 4, 6, 7))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 4, 7, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 6, 4, 7))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 6, 7, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 7, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 2, 7, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 2, 6, 7))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 2, 7, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 6, 2, 7))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 6, 7, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 7, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 4, 7, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 2, 4, 7))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 2, 7, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 4, 2, 7))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 4, 7, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 7, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 6, 7, 4, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 7, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 7, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 7, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 5, 7, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 5, 7, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 5, 7, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 4, 5, 7))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 4, 7, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 5, 4, 7))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 5, 7, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 7, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 2, 7, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 2, 5, 7))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 2, 7, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 5, 2, 7))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 5, 7, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 7, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 4, 7, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 2, 4, 7))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 2, 7, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 4, 2, 7))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 4, 7, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 7, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 5, 7, 4, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 7, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 7, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 7, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 6, 7, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 6, 7, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 6, 7, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 3, 7, 2, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 7, 2, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 7, 2, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 7, 2, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 7, 2, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 7, 2, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 7, 4, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 3, 7, 4, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 3, 7, 4, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 7, 4, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 7, 4, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 7, 4, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 7, 5, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 3, 7, 5, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 3, 7, 5, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 3, 7, 5, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 3, 7, 5, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 7, 5, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 3, 7, 6, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 3, 7, 6, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 3, 7, 6, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 3, 7, 6, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 3, 7, 6, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 3, 7, 6, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 5, 6, 7))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 5, 7, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 6, 5, 7))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 6, 7, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 7, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 3, 7, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 3, 6, 7))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 3, 7, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 6, 3, 7))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 6, 7, 3))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 7, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 5, 7, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 3, 5, 7))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 3, 7, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 5, 3, 7))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 5, 7, 3))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 7, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 6, 7, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 2, 7, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 7, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 7, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 2, 7, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 2, 7, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 2, 7, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 5, 6, 7))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 5, 7, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 6, 5, 7))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 6, 7, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 7, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 2, 7, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 2, 6, 7))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 2, 7, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 6, 2, 7))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 6, 7, 2))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 7, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 5, 7, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 2, 5, 7))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 2, 7, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 5, 2, 7))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 5, 7, 2))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 7, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 6, 7, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 3, 7, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 7, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 7, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 3, 7, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 3, 7, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 3, 7, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 3, 6, 7))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 3, 7, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 6, 3, 7))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 6, 7, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 7, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 2, 7, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 2, 6, 7))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 2, 7, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 6, 2, 7))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 6, 7, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 7, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 3, 7, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 2, 3, 7))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 2, 7, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 3, 2, 7))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 3, 7, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 7, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 6, 7, 3, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 7, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 7, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 7, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 5, 7, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 5, 7, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 5, 7, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 3, 5, 7))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 3, 7, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 5, 3, 7))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 5, 7, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 7, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 2, 7, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 2, 5, 7))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 2, 7, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 5, 2, 7))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 5, 7, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 7, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 3, 7, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 2, 3, 7))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 2, 7, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 3, 2, 7))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 3, 7, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 7, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 5, 7, 3, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 7, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 7, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 7, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 6, 7, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 6, 7, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 6, 7, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 4, 7, 2, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 7, 2, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 7, 2, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 7, 2, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 7, 2, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 7, 2, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 7, 3, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 4, 7, 3, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 4, 7, 3, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 7, 3, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 7, 3, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 7, 3, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 7, 5, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 4, 7, 5, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 4, 7, 5, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 4, 7, 5, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 4, 7, 5, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 7, 5, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 4, 7, 6, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 4, 7, 6, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 4, 7, 6, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 4, 7, 6, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 4, 7, 6, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 4, 7, 6, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 4, 6, 7))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 4, 7, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 6, 4, 7))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 6, 7, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 7, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 3, 7, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 3, 6, 7))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 3, 7, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 6, 3, 7))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 6, 7, 3))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 7, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 4, 7, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 3, 4, 7))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 3, 7, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 4, 3, 7))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 4, 7, 3))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 7, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 6, 7, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 2, 7, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 7, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 7, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 2, 7, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 2, 7, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 2, 7, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 4, 6, 7))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 4, 7, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 6, 4, 7))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 6, 7, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 7, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 2, 7, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 2, 6, 7))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 2, 7, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 6, 2, 7))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 6, 7, 2))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 7, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 4, 7, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 2, 4, 7))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 2, 7, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 4, 2, 7))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 4, 7, 2))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 7, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 6, 7, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 3, 7, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 7, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 7, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 3, 7, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 3, 7, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 3, 7, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 3, 6, 7))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 3, 7, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 6, 3, 7))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 6, 7, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 7, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 2, 7, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 2, 6, 7))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 2, 7, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 6, 2, 7))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 6, 7, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 7, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 3, 7, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 2, 3, 7))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 2, 7, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 3, 2, 7))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 3, 7, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 7, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 6, 7, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 7, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 7, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 7, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 4, 7, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 4, 7, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 4, 7, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 3, 4, 7))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 3, 7, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 4, 3, 7))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 4, 7, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 7, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 2, 7, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 2, 4, 7))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 2, 7, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 4, 2, 7))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 4, 7, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 7, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 3, 7, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 2, 3, 7))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 2, 7, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 3, 2, 7))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 3, 7, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 7, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 4, 7, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 7, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 7, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 7, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 6, 7, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 6, 7, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 6, 7, 4, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 7, 2, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 7, 2, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 7, 2, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 7, 2, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 7, 2, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 7, 2, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 7, 3, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 5, 7, 3, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 5, 7, 3, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 7, 3, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 7, 3, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 7, 3, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 7, 4, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 5, 7, 4, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 5, 7, 4, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 5, 7, 4, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 5, 7, 4, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 7, 4, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 5, 7, 6, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 5, 7, 6, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 5, 7, 6, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 5, 7, 6, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 5, 7, 6, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 5, 7, 6, 4, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 4, 5, 7))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 4, 7, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 5, 4, 7))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 5, 7, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 7, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 3, 7, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 3, 5, 7))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 3, 7, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 5, 3, 7))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 5, 7, 3))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 7, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 4, 7, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 3, 4, 7))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 3, 7, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 4, 3, 7))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 4, 7, 3))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 7, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 5, 7, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 2, 7, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 7, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 7, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 2, 7, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 2, 7, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 2, 7, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 4, 5, 7))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 4, 7, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 5, 4, 7))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 5, 7, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 7, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 2, 7, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 2, 5, 7))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 2, 7, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 5, 2, 7))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 5, 7, 2))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 7, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 4, 7, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 2, 4, 7))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 2, 7, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 4, 2, 7))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 4, 7, 2))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 7, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 5, 7, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 3, 7, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 7, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 7, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 3, 7, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 3, 7, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 3, 7, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 3, 5, 7))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 3, 7, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 5, 3, 7))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 5, 7, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 7, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 2, 7, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 2, 5, 7))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 2, 7, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 5, 2, 7))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 5, 7, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 7, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 3, 7, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 2, 3, 7))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 2, 7, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 3, 2, 7))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 3, 7, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 7, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 5, 7, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 7, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 7, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 7, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 4, 7, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 4, 7, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 4, 7, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 3, 4, 7))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 3, 7, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 4, 3, 7))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 4, 7, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 7, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 2, 7, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 2, 4, 7))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 2, 7, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 4, 2, 7))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 4, 7, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 7, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 3, 7, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 2, 3, 7))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 2, 7, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 3, 2, 7))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 3, 7, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 7, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 4, 7, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 7, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 7, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 7, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 5, 7, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 5, 7, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 5, 7, 4, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 7, 2, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 7, 2, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 7, 2, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 7, 2, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 7, 2, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 7, 2, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 7, 3, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 6, 7, 3, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 6, 7, 3, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 7, 3, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 7, 3, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 7, 3, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 7, 4, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 6, 7, 4, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 6, 7, 4, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 6, 7, 4, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 6, 7, 4, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 7, 4, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 6, 7, 5, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 6, 7, 5, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 6, 7, 5, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 6, 7, 5, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 6, 7, 5, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 6, 7, 5, 4, 3, 2))
        X += np.transpose(tensor, (0, 1, 7, 2, 3, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 7, 2, 3, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 7, 2, 3, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 7, 2, 3, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 7, 2, 3, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 7, 2, 3, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 7, 2, 4, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 7, 2, 4, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 7, 2, 4, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 7, 2, 4, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 7, 2, 4, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 7, 2, 4, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 7, 2, 5, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 7, 2, 5, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 7, 2, 5, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 7, 2, 5, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 7, 2, 5, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 7, 2, 5, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 7, 2, 6, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 7, 2, 6, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 7, 2, 6, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 7, 2, 6, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 7, 2, 6, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 7, 2, 6, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 7, 3, 2, 4, 5, 6))
        X += np.transpose(tensor, (0, 1, 7, 3, 2, 4, 6, 5))
        X += np.transpose(tensor, (0, 1, 7, 3, 2, 5, 4, 6))
        X += np.transpose(tensor, (0, 1, 7, 3, 2, 5, 6, 4))
        X += np.transpose(tensor, (0, 1, 7, 3, 2, 6, 4, 5))
        X += np.transpose(tensor, (0, 1, 7, 3, 2, 6, 5, 4))
        X += np.transpose(tensor, (0, 1, 7, 3, 4, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 7, 3, 4, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 7, 3, 4, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 7, 3, 4, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 7, 3, 4, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 7, 3, 4, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 7, 3, 5, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 7, 3, 5, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 7, 3, 5, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 7, 3, 5, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 7, 3, 5, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 7, 3, 5, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 7, 3, 6, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 7, 3, 6, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 7, 3, 6, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 7, 3, 6, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 7, 3, 6, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 7, 3, 6, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 7, 4, 2, 3, 5, 6))
        X += np.transpose(tensor, (0, 1, 7, 4, 2, 3, 6, 5))
        X += np.transpose(tensor, (0, 1, 7, 4, 2, 5, 3, 6))
        X += np.transpose(tensor, (0, 1, 7, 4, 2, 5, 6, 3))
        X += np.transpose(tensor, (0, 1, 7, 4, 2, 6, 3, 5))
        X += np.transpose(tensor, (0, 1, 7, 4, 2, 6, 5, 3))
        X += np.transpose(tensor, (0, 1, 7, 4, 3, 2, 5, 6))
        X += np.transpose(tensor, (0, 1, 7, 4, 3, 2, 6, 5))
        X += np.transpose(tensor, (0, 1, 7, 4, 3, 5, 2, 6))
        X += np.transpose(tensor, (0, 1, 7, 4, 3, 5, 6, 2))
        X += np.transpose(tensor, (0, 1, 7, 4, 3, 6, 2, 5))
        X += np.transpose(tensor, (0, 1, 7, 4, 3, 6, 5, 2))
        X += np.transpose(tensor, (0, 1, 7, 4, 5, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 7, 4, 5, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 7, 4, 5, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 7, 4, 5, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 7, 4, 5, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 7, 4, 5, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 7, 4, 6, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 7, 4, 6, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 7, 4, 6, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 7, 4, 6, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 7, 4, 6, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 7, 4, 6, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 7, 5, 2, 3, 4, 6))
        X += np.transpose(tensor, (0, 1, 7, 5, 2, 3, 6, 4))
        X += np.transpose(tensor, (0, 1, 7, 5, 2, 4, 3, 6))
        X += np.transpose(tensor, (0, 1, 7, 5, 2, 4, 6, 3))
        X += np.transpose(tensor, (0, 1, 7, 5, 2, 6, 3, 4))
        X += np.transpose(tensor, (0, 1, 7, 5, 2, 6, 4, 3))
        X += np.transpose(tensor, (0, 1, 7, 5, 3, 2, 4, 6))
        X += np.transpose(tensor, (0, 1, 7, 5, 3, 2, 6, 4))
        X += np.transpose(tensor, (0, 1, 7, 5, 3, 4, 2, 6))
        X += np.transpose(tensor, (0, 1, 7, 5, 3, 4, 6, 2))
        X += np.transpose(tensor, (0, 1, 7, 5, 3, 6, 2, 4))
        X += np.transpose(tensor, (0, 1, 7, 5, 3, 6, 4, 2))
        X += np.transpose(tensor, (0, 1, 7, 5, 4, 2, 3, 6))
        X += np.transpose(tensor, (0, 1, 7, 5, 4, 2, 6, 3))
        X += np.transpose(tensor, (0, 1, 7, 5, 4, 3, 2, 6))
        X += np.transpose(tensor, (0, 1, 7, 5, 4, 3, 6, 2))
        X += np.transpose(tensor, (0, 1, 7, 5, 4, 6, 2, 3))
        X += np.transpose(tensor, (0, 1, 7, 5, 4, 6, 3, 2))
        X += np.transpose(tensor, (0, 1, 7, 5, 6, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 7, 5, 6, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 7, 5, 6, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 7, 5, 6, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 7, 5, 6, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 7, 5, 6, 4, 3, 2))
        X += np.transpose(tensor, (0, 1, 7, 6, 2, 3, 4, 5))
        X += np.transpose(tensor, (0, 1, 7, 6, 2, 3, 5, 4))
        X += np.transpose(tensor, (0, 1, 7, 6, 2, 4, 3, 5))
        X += np.transpose(tensor, (0, 1, 7, 6, 2, 4, 5, 3))
        X += np.transpose(tensor, (0, 1, 7, 6, 2, 5, 3, 4))
        X += np.transpose(tensor, (0, 1, 7, 6, 2, 5, 4, 3))
        X += np.transpose(tensor, (0, 1, 7, 6, 3, 2, 4, 5))
        X += np.transpose(tensor, (0, 1, 7, 6, 3, 2, 5, 4))
        X += np.transpose(tensor, (0, 1, 7, 6, 3, 4, 2, 5))
        X += np.transpose(tensor, (0, 1, 7, 6, 3, 4, 5, 2))
        X += np.transpose(tensor, (0, 1, 7, 6, 3, 5, 2, 4))
        X += np.transpose(tensor, (0, 1, 7, 6, 3, 5, 4, 2))
        X += np.transpose(tensor, (0, 1, 7, 6, 4, 2, 3, 5))
        X += np.transpose(tensor, (0, 1, 7, 6, 4, 2, 5, 3))
        X += np.transpose(tensor, (0, 1, 7, 6, 4, 3, 2, 5))
        X += np.transpose(tensor, (0, 1, 7, 6, 4, 3, 5, 2))
        X += np.transpose(tensor, (0, 1, 7, 6, 4, 5, 2, 3))
        X += np.transpose(tensor, (0, 1, 7, 6, 4, 5, 3, 2))
        X += np.transpose(tensor, (0, 1, 7, 6, 5, 2, 3, 4))
        X += np.transpose(tensor, (0, 1, 7, 6, 5, 2, 4, 3))
        X += np.transpose(tensor, (0, 1, 7, 6, 5, 3, 2, 4))
        X += np.transpose(tensor, (0, 1, 7, 6, 5, 3, 4, 2))
        X += np.transpose(tensor, (0, 1, 7, 6, 5, 4, 2, 3))
        X += np.transpose(tensor, (0, 1, 7, 6, 5, 4, 3, 2))
    return X
